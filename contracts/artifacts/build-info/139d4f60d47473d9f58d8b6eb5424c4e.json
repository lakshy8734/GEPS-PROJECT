{
	"id": "139d4f60d47473d9f58d8b6eb5424c4e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GepsToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n\r\ninterface IERC20Errors {\r\n    error ERC20InsufficientBalance(\r\n        address sender,\r\n        uint256 balance,\r\n        uint256 needed\r\n    );\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    error ERC20InsufficientAllowance(\r\n        address spender,\r\n        uint256 allowance,\r\n        uint256 needed\r\n    );\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    error ERC1155InsufficientBalance(\r\n        address sender,\r\n        uint256 balance,\r\n        uint256 needed,\r\n        uint256 tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 value\r\n    ) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal virtual {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        bool emitEvent\r\n    ) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 value\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(\r\n                    spender,\r\n                    currentAllowance,\r\n                    value\r\n                );\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ncontract GEPSToken is ERC20, Ownable {\r\n    uint256 private constant INITIAL_SUPPLY = 50000000 * 10 ** 18; // 50,000,000 GEPS with 18 decimals\r\n    uint256 private constant TAX_PERCENT = 2;\r\n\r\n    address public presaleAddress;\r\n    address public rndAddress;\r\n    address public marketingAddress;\r\n    address public treasuryAddress;\r\n    address public teamAddress;\r\n    address public partnershipAddress;\r\n    address public liquidityAddress;\r\n    address public charityAddress;\r\n    address public reserveAddress;\r\n    bool public minted = false;\r\n\r\n    constructor(\r\n        address _presaleAddress,\r\n        address _rndAddress,\r\n        address _marketingAddress,\r\n        address _treasuryAddress,\r\n        address _teamAddress,\r\n        address _partnershipAddress,\r\n        address _liquidityAddress,\r\n        address _charityAddress,\r\n        address _reserveAddress\r\n    ) ERC20(\"GEPS\", \"GEPS\") Ownable(msg.sender) {\r\n        presaleAddress = _presaleAddress;\r\n        rndAddress = _rndAddress;\r\n        marketingAddress = _marketingAddress;\r\n        treasuryAddress = _treasuryAddress;\r\n        teamAddress = _teamAddress;\r\n        partnershipAddress = _partnershipAddress;\r\n        liquidityAddress = _liquidityAddress;\r\n        charityAddress = _charityAddress;\r\n        reserveAddress = _reserveAddress;\r\n    }\r\n\r\n    function mint() external onlyOwner {\r\n        require(!minted, \"Tokens have already been minted\");\r\n        minted = true;\r\n        _mint(presaleAddress, 20000000 * 10 ** 18); // 40%\r\n        _mint(rndAddress, 2500000 * 10 ** 18); // 5%\r\n        _mint(marketingAddress, 2500000 * 10 ** 18); // 5%\r\n        _mint(treasuryAddress, 5000000 * 10 ** 18); // 10%\r\n        _mint(teamAddress, 5000000 * 10 ** 18); // 10%\r\n        _mint(partnershipAddress, 2500000 * 10 ** 18); // 5%\r\n        _mint(liquidityAddress, 5000000 * 10 ** 18); // 10%\r\n        _mint(charityAddress, 2500000 * 10 ** 18); // 5%\r\n        _mint(reserveAddress, 5000000 * 10 ** 18); // 10%\r\n    }\r\n\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual override {\r\n        if (sender == owner() || recipient == owner()) {\r\n            // If the sender or recipient is the owner, transfer without tax\r\n            super._transfer(sender, recipient, amount);\r\n        } else {\r\n            // Otherwise, apply the tax\r\n            uint256 taxAmount = (amount * TAX_PERCENT) / 100;\r\n            uint256 transferAmount = amount - taxAmount;\r\n\r\n            // Ensure the tax amount is properly split\r\n            uint256 halfTax = taxAmount / 2;\r\n            uint256 remainingTax = taxAmount - halfTax; // This handles any rounding issues\r\n\r\n            // Perform the transfers\r\n            super._transfer(sender, treasuryAddress, halfTax);\r\n            super._transfer(sender, charityAddress, remainingTax);\r\n            super._transfer(sender, recipient, transferAmount);\r\n        }\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/GepsToken.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 263,
								"contract": "contracts/GepsToken.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 269,
								"contract": "contracts/GepsToken.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 271,
								"contract": "contracts/GepsToken.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 273,
								"contract": "contracts/GepsToken.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 275,
								"contract": "contracts/GepsToken.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GEPSToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_presaleAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rndAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasuryAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_teamAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_partnershipAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidityAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_charityAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reserveAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "charityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "partnershipAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rndAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GepsToken.sol\":15045:18007  contract GEPSToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GepsToken.sol\":15568:15594  bool public minted = false */\n  0x0e\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/GepsToken.sol\":15603:16371  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/GepsToken.sol\":7928:8044  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x47455053)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n    /* \"contracts/GepsToken.sol\":15960:15970  msg.sender */\n  caller\n  swap2\n    /* \"contracts/GepsToken.sol\":7995:8000  _name */\n  0x03\n    /* \"contracts/GepsToken.sol\":7995:8008  _name = name_ */\n  tag_8\n    /* \"contracts/GepsToken.sol\":7928:8044  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"contracts/GepsToken.sol\":7995:8000  _name */\n  dup3\n    /* \"contracts/GepsToken.sol\":7995:8008  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/GepsToken.sol\":8019:8026  _symbol */\n  0x04\n    /* \"contracts/GepsToken.sol\":8019:8036  _symbol = symbol_ */\n  tag_10\n    /* \"contracts/GepsToken.sol\":8029:8036  symbol_ */\n  dup3\n    /* \"contracts/GepsToken.sol\":8019:8026  _symbol */\n  dup3\n    /* \"contracts/GepsToken.sol\":8019:8036  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GepsToken.sol\":13635:13661  initialOwner == address(0) */\n  dup2\n  and\n    /* \"contracts/GepsToken.sol\":13631:13728  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/GepsToken.sol\":13685:13716  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/GepsToken.sol\":13713:13714  0 */\n  0x00\n    /* \"contracts/GepsToken.sol\":13685:13716  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3882:3933   */\n  mstore\n    /* \"#utility.yul\":3855:3873   */\n  0x24\n  add\n    /* \"contracts/GepsToken.sol\":13685:13716  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/GepsToken.sol\":13631:13728  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/GepsToken.sol\":13738:13770  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/GepsToken.sol\":13757:13769  initialOwner */\n  dup2\n    /* \"contracts/GepsToken.sol\":13738:13756  _transferOwnership */\n  tag_16\n    /* \"contracts/GepsToken.sol\":13738:13770  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/GepsToken.sol\":15983:15997  presaleAddress */\n  0x06\n    /* \"contracts/GepsToken.sol\":15983:16015  presaleAddress = _presaleAddress */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap12\n  dup13\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/GepsToken.sol\":16026:16036  rndAddress */\n  0x07\n    /* \"contracts/GepsToken.sol\":16026:16050  rndAddress = _rndAddress */\n  dup1\n  sload\n  dup3\n  and\n  swap10\n  dup12\n  and\n  swap10\n  swap1\n  swap10\n  or\n  swap1\n  swap9\n  sstore\n    /* \"contracts/GepsToken.sol\":16061:16077  marketingAddress */\n  0x08\n    /* \"contracts/GepsToken.sol\":16061:16097  marketingAddress = _marketingAddress */\n  dup1\n  sload\n  dup10\n  and\n  swap8\n  dup11\n  and\n  swap8\n  swap1\n  swap8\n  or\n  swap1\n  swap7\n  sstore\n    /* \"contracts/GepsToken.sol\":16108:16123  treasuryAddress */\n  0x09\n    /* \"contracts/GepsToken.sol\":16108:16142  treasuryAddress = _treasuryAddress */\n  dup1\n  sload\n  dup9\n  and\n  swap6\n  dup10\n  and\n  swap6\n  swap1\n  swap6\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/GepsToken.sol\":16153:16164  teamAddress */\n  0x0a\n    /* \"contracts/GepsToken.sol\":16153:16179  teamAddress = _teamAddress */\n  dup1\n  sload\n  dup8\n  and\n  swap4\n  dup9\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/GepsToken.sol\":16190:16208  partnershipAddress */\n  0x0b\n    /* \"contracts/GepsToken.sol\":16190:16230  partnershipAddress = _partnershipAddress */\n  dup1\n  sload\n  dup7\n  and\n  swap2\n  dup8\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/GepsToken.sol\":16241:16257  liquidityAddress */\n  0x0c\n    /* \"contracts/GepsToken.sol\":16241:16277  liquidityAddress = _liquidityAddress */\n  dup1\n  sload\n  dup6\n  and\n  swap2\n  dup7\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/GepsToken.sol\":16288:16302  charityAddress */\n  0x0d\n    /* \"contracts/GepsToken.sol\":16288:16320  charityAddress = _charityAddress */\n  dup1\n  sload\n  dup5\n  and\n  swap2\n  dup6\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/GepsToken.sol\":16331:16345  reserveAddress */\n  0x0e\n    /* \"contracts/GepsToken.sol\":16331:16363  reserveAddress = _reserveAddress */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/GepsToken.sol\":15045:18007  contract GEPSToken is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"contracts/GepsToken.sol\":14847:15038  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/GepsToken.sol\":14940:14946  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/GepsToken.sol\":14957:14974  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/GepsToken.sol\":14990:15030  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/GepsToken.sol\":14940:14946  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/GepsToken.sol\":14957:14974  _owner = newOwner */\n  swap1\n    /* \"contracts/GepsToken.sol\":14940:14946  _owner */\n  dup3\n  swap1\n    /* \"contracts/GepsToken.sol\":14990:15030  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/GepsToken.sol\":14921:14937  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/GepsToken.sol\":14990:15030  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/GepsToken.sol\":14910:15038  {... */\n  pop\n    /* \"contracts/GepsToken.sol\":14847:15038  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_28:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:1090   */\ntag_3:\n    /* \"#utility.yul\":338:344   */\n  0x00\n    /* \"#utility.yul\":346:352   */\n  dup1\n    /* \"#utility.yul\":354:360   */\n  0x00\n    /* \"#utility.yul\":362:368   */\n  dup1\n    /* \"#utility.yul\":370:376   */\n  0x00\n    /* \"#utility.yul\":378:384   */\n  dup1\n    /* \"#utility.yul\":386:392   */\n  0x00\n    /* \"#utility.yul\":394:400   */\n  dup1\n    /* \"#utility.yul\":402:408   */\n  0x00\n    /* \"#utility.yul\":455:458   */\n  0x0120\n    /* \"#utility.yul\":443:452   */\n  dup11\n    /* \"#utility.yul\":434:441   */\n  dup13\n    /* \"#utility.yul\":430:453   */\n  sub\n    /* \"#utility.yul\":426:459   */\n  slt\n    /* \"#utility.yul\":423:476   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":472:473   */\n  0x00\n    /* \"#utility.yul\":469:470   */\n  dup1\n    /* \"#utility.yul\":462:474   */\n  revert\n    /* \"#utility.yul\":423:476   */\ntag_30:\n    /* \"#utility.yul\":495:535   */\n  tag_31\n    /* \"#utility.yul\":525:534   */\n  dup11\n    /* \"#utility.yul\":495:535   */\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":485:535   */\n  swap9\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_32\n    /* \"#utility.yul\":599:601   */\n  0x20\n    /* \"#utility.yul\":588:597   */\n  dup12\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_20\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":544:603   */\n  swap8\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_33\n    /* \"#utility.yul\":667:669   */\n  0x40\n    /* \"#utility.yul\":656:665   */\n  dup12\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":612:671   */\n  swap7\n  pop\n    /* \"#utility.yul\":690:739   */\n  tag_34\n    /* \"#utility.yul\":735:737   */\n  0x60\n    /* \"#utility.yul\":724:733   */\n  dup12\n    /* \"#utility.yul\":720:738   */\n  add\n    /* \"#utility.yul\":690:739   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":680:739   */\n  swap6\n  pop\n    /* \"#utility.yul\":758:808   */\n  tag_35\n    /* \"#utility.yul\":803:806   */\n  0x80\n    /* \"#utility.yul\":792:801   */\n  dup12\n    /* \"#utility.yul\":788:807   */\n  add\n    /* \"#utility.yul\":758:808   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":748:808   */\n  swap5\n  pop\n    /* \"#utility.yul\":827:877   */\n  tag_36\n    /* \"#utility.yul\":872:875   */\n  0xa0\n    /* \"#utility.yul\":861:870   */\n  dup12\n    /* \"#utility.yul\":857:876   */\n  add\n    /* \"#utility.yul\":827:877   */\n  tag_20\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":817:877   */\n  swap4\n  pop\n    /* \"#utility.yul\":896:946   */\n  tag_37\n    /* \"#utility.yul\":941:944   */\n  0xc0\n    /* \"#utility.yul\":930:939   */\n  dup12\n    /* \"#utility.yul\":926:945   */\n  add\n    /* \"#utility.yul\":896:946   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":886:946   */\n  swap3\n  pop\n    /* \"#utility.yul\":965:1015   */\n  tag_38\n    /* \"#utility.yul\":1010:1013   */\n  0xe0\n    /* \"#utility.yul\":999:1008   */\n  dup12\n    /* \"#utility.yul\":995:1014   */\n  add\n    /* \"#utility.yul\":965:1015   */\n  tag_20\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":955:1015   */\n  swap2\n  pop\n    /* \"#utility.yul\":1034:1084   */\n  tag_39\n    /* \"#utility.yul\":1079:1082   */\n  0x0100\n    /* \"#utility.yul\":1068:1077   */\n  dup12\n    /* \"#utility.yul\":1064:1083   */\n  add\n    /* \"#utility.yul\":1034:1084   */\n  tag_20\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1024:1084   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:1090   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  jump\t// out\n    /* \"#utility.yul\":1095:1222   */\ntag_21:\n    /* \"#utility.yul\":1156:1166   */\n  0x4e487b71\n    /* \"#utility.yul\":1151:1154   */\n  0xe0\n    /* \"#utility.yul\":1147:1167   */\n  shl\n    /* \"#utility.yul\":1144:1145   */\n  0x00\n    /* \"#utility.yul\":1137:1168   */\n  mstore\n    /* \"#utility.yul\":1187:1191   */\n  0x41\n    /* \"#utility.yul\":1184:1185   */\n  0x04\n    /* \"#utility.yul\":1177:1192   */\n  mstore\n    /* \"#utility.yul\":1211:1215   */\n  0x24\n    /* \"#utility.yul\":1208:1209   */\n  0x00\n    /* \"#utility.yul\":1201:1216   */\n  revert\n    /* \"#utility.yul\":1227:1607   */\ntag_22:\n    /* \"#utility.yul\":1306:1307   */\n  0x01\n    /* \"#utility.yul\":1302:1314   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1349:1361   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1370:1431   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1424:1428   */\n  0x7f\n    /* \"#utility.yul\":1416:1422   */\n  dup3\n    /* \"#utility.yul\":1412:1429   */\n  and\n    /* \"#utility.yul\":1402:1429   */\n  swap2\n  pop\n    /* \"#utility.yul\":1370:1431   */\ntag_42:\n    /* \"#utility.yul\":1477:1479   */\n  0x20\n    /* \"#utility.yul\":1469:1475   */\n  dup3\n    /* \"#utility.yul\":1466:1480   */\n  lt\n    /* \"#utility.yul\":1446:1464   */\n  dup2\n    /* \"#utility.yul\":1443:1481   */\n  sub\n    /* \"#utility.yul\":1440:1601   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1523:1533   */\n  0x4e487b71\n    /* \"#utility.yul\":1518:1521   */\n  0xe0\n    /* \"#utility.yul\":1514:1534   */\n  shl\n    /* \"#utility.yul\":1511:1512   */\n  0x00\n    /* \"#utility.yul\":1504:1535   */\n  mstore\n    /* \"#utility.yul\":1558:1562   */\n  0x22\n    /* \"#utility.yul\":1555:1556   */\n  0x04\n    /* \"#utility.yul\":1548:1563   */\n  mstore\n    /* \"#utility.yul\":1586:1590   */\n  0x24\n    /* \"#utility.yul\":1583:1584   */\n  0x00\n    /* \"#utility.yul\":1576:1591   */\n  revert\n    /* \"#utility.yul\":1440:1601   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1227:1607   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1738:2256   */\ntag_24:\n    /* \"#utility.yul\":1840:1842   */\n  0x1f\n    /* \"#utility.yul\":1835:1838   */\n  dup3\n    /* \"#utility.yul\":1832:1843   */\n  gt\n    /* \"#utility.yul\":1829:2250   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1876:1881   */\n  dup1\n    /* \"#utility.yul\":1873:1874   */\n  0x00\n    /* \"#utility.yul\":1866:1882   */\n  mstore\n    /* \"#utility.yul\":1920:1924   */\n  0x20\n    /* \"#utility.yul\":1917:1918   */\n  0x00\n    /* \"#utility.yul\":1907:1925   */\n  keccak256\n    /* \"#utility.yul\":1990:1992   */\n  0x1f\n    /* \"#utility.yul\":1978:1988   */\n  dup5\n    /* \"#utility.yul\":1974:1993   */\n  add\n    /* \"#utility.yul\":1971:1972   */\n  0x05\n    /* \"#utility.yul\":1967:1994   */\n  shr\n    /* \"#utility.yul\":1961:1965   */\n  dup2\n    /* \"#utility.yul\":1957:1995   */\n  add\n    /* \"#utility.yul\":2026:2030   */\n  0x20\n    /* \"#utility.yul\":2014:2024   */\n  dup6\n    /* \"#utility.yul\":2011:2031   */\n  lt\n    /* \"#utility.yul\":2008:2055   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":2049:2053   */\n  dup1\n    /* \"#utility.yul\":2008:2055   */\ntag_47:\n    /* \"#utility.yul\":2104:2106   */\n  0x1f\n    /* \"#utility.yul\":2099:2102   */\n  dup5\n    /* \"#utility.yul\":2095:2107   */\n  add\n    /* \"#utility.yul\":2092:2093   */\n  0x05\n    /* \"#utility.yul\":2088:2108   */\n  shr\n    /* \"#utility.yul\":2082:2086   */\n  dup3\n    /* \"#utility.yul\":2078:2109   */\n  add\n    /* \"#utility.yul\":2068:2109   */\n  swap2\n  pop\n    /* \"#utility.yul\":2159:2240   */\ntag_48:\n    /* \"#utility.yul\":2177:2179   */\n  dup2\n    /* \"#utility.yul\":2170:2175   */\n  dup2\n    /* \"#utility.yul\":2167:2180   */\n  lt\n    /* \"#utility.yul\":2159:2240   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2236:2237   */\n  0x00\n    /* \"#utility.yul\":2222:2238   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2203:2204   */\n  0x01\n    /* \"#utility.yul\":2192:2205   */\n  add\n    /* \"#utility.yul\":2159:2240   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":2163:2166   */\n  pop\n  pop\n    /* \"#utility.yul\":1829:2250   */\ntag_46:\n    /* \"#utility.yul\":1738:2256   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2432:3731   */\ntag_9:\n    /* \"#utility.yul\":2552:2562   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2574:2604   */\n  dup2\n  gt\n    /* \"#utility.yul\":2571:2627   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2607:2625   */\n  tag_54\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2636:2733   */\n  tag_55\n    /* \"#utility.yul\":2726:2732   */\n  dup2\n    /* \"#utility.yul\":2686:2724   */\n  tag_56\n    /* \"#utility.yul\":2718:2722   */\n  dup5\n    /* \"#utility.yul\":2712:2723   */\n  sload\n    /* \"#utility.yul\":2686:2724   */\n  tag_22\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2680:2684   */\n  dup5\n    /* \"#utility.yul\":2636:2733   */\n  tag_24\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2782:2786   */\n  0x20\n    /* \"#utility.yul\":2813:2815   */\n  0x1f\n    /* \"#utility.yul\":2802:2816   */\n  dup3\n  gt\n    /* \"#utility.yul\":2830:2831   */\n  0x01\n    /* \"#utility.yul\":2825:3474   */\n  dup2\n  eq\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3518:3519   */\n  0x00\n    /* \"#utility.yul\":3535:3541   */\n  dup4\n    /* \"#utility.yul\":3532:3621   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":3587:3606   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3581:3607   */\n  mload\n    /* \"#utility.yul\":3532:3621   */\ntag_59:\n  not(0x00)\n    /* \"#utility.yul\":2389:2390   */\n  0x03\n    /* \"#utility.yul\":2385:2396   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2381:2405   */\n  shr\n    /* \"#utility.yul\":2377:2406   */\n  not\n    /* \"#utility.yul\":2367:2407   */\n  and\n    /* \"#utility.yul\":2413:2414   */\n  0x01\n    /* \"#utility.yul\":2409:2420   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2364:2421   */\n  or\n    /* \"#utility.yul\":3634:3715   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2795:3725   */\n  jump(tag_50)\n    /* \"#utility.yul\":2825:3474   */\ntag_58:\n    /* \"#utility.yul\":1685:1686   */\n  0x00\n    /* \"#utility.yul\":1678:1692   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1722:1726   */\n  0x20\n    /* \"#utility.yul\":1709:1727   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2861:2881   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2979:3201   */\ntag_62:\n    /* \"#utility.yul\":2993:3000   */\n  dup3\n    /* \"#utility.yul\":2990:2991   */\n  dup2\n    /* \"#utility.yul\":2987:3001   */\n  lt\n    /* \"#utility.yul\":2979:3201   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3075:3094   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3069:3095   */\n  mload\n    /* \"#utility.yul\":3054:3096   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3182:3186   */\n  0x20\n    /* \"#utility.yul\":3167:3187   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3135:3136   */\n  0x01\n    /* \"#utility.yul\":3123:3137   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3009:3021   */\n  add\n    /* \"#utility.yul\":2979:3201   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2983:2986   */\n  pop\n    /* \"#utility.yul\":3229:3235   */\n  dup5\n    /* \"#utility.yul\":3220:3227   */\n  dup3\n    /* \"#utility.yul\":3217:3236   */\n  lt\n    /* \"#utility.yul\":3214:3415   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3290:3309   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3284:3310   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3373:3374   */\n  0x03\n    /* \"#utility.yul\":3369:3383   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3385:3388   */\n  0xf8\n    /* \"#utility.yul\":3365:3389   */\n  and\n    /* \"#utility.yul\":3361:3398   */\n  shr\n    /* \"#utility.yul\":3357:3399   */\n  not\n    /* \"#utility.yul\":3342:3400   */\n  and\n    /* \"#utility.yul\":3327:3401   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3214:3415   */\ntag_65:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3461:3462   */\n  0x01\n    /* \"#utility.yul\":3445:3459   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3441:3463   */\n  add\n    /* \"#utility.yul\":3428:3464   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2432:3731   */\n  jump\t// out\n    /* \"#utility.yul\":3736:3939   */\ntag_26:\n    /* \"contracts/GepsToken.sol\":15045:18007  contract GEPSToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GepsToken.sol\":15045:18007  contract GEPSToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xbc71788b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xbc71788b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc5f956af\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd3e1fe14\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf79ed94b\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa5ece941\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xafcf2fc4\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x1c75f085\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x1c75f085\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3221c93f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f02c420\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x122fe685\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GepsToken.sol\":8114:8205  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GepsToken.sol\":9284:9499  function approve(... */\n    tag_4:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"contracts/GepsToken.sol\":9284:9499  function approve(... */\n      tag_31\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"contracts/GepsToken.sol\":15242:15271  address public presaleAddress */\n    tag_5:\n      sload(0x06)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1276:1308   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1258:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/GepsToken.sol\":15242:15271  address public presaleAddress */\n      tag_31\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":16379:17038  function mint() external onlyOwner {... */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/GepsToken.sol\":8576:8675  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"contracts/GepsToken.sol\":8655:8667  _totalSupply */\n      sload(0x02)\n        /* \"contracts/GepsToken.sol\":8576:8675  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"contracts/GepsToken.sol\":8576:8675  function totalSupply() public view virtual returns (uint256) {... */\n      tag_31\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"contracts/GepsToken.sol\":15385:15411  address public teamAddress */\n    tag_8:\n      sload(0x0a)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":9507:9790  function transferFrom(... */\n    tag_9:\n      tag_33\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":8427:8511  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      mload(0x40)\n        /* \"contracts/GepsToken.sol\":8501:8503  18 */\n      0x12\n        /* \"#utility.yul\":2023:2059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1996:2014   */\n      add\n        /* \"contracts/GepsToken.sol\":8427:8511  function decimals() public view virtual returns (uint8) {... */\n      tag_31\n        /* \"#utility.yul\":1881:2065   */\n      jump\n        /* \"contracts/GepsToken.sol\":15458:15489  address public liquidityAddress */\n    tag_11:\n      sload(0x0c)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":15568:15594  bool public minted = false */\n    tag_12:\n      sload(0x0e)\n      tag_33\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":8738:8856  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_45\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":8830:8848  _balances[account] */\n      and\n        /* \"contracts/GepsToken.sol\":8803:8810  uint256 */\n      0x00\n        /* \"contracts/GepsToken.sol\":8830:8848  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/GepsToken.sol\":8738:8856  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/GepsToken.sol\":14356:14459  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_43\n      tag_73\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":14017:14104  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"contracts/GepsToken.sol\":14090:14096  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/GepsToken.sol\":14017:14104  function owner() public view virtual returns (address) {... */\n      jump(tag_39)\n        /* \"contracts/GepsToken.sol\":8324:8419  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_29\n      tag_78\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":15310:15341  address public marketingAddress */\n    tag_17:\n      sload(0x08)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":8864:9046  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_33\n      tag_84\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":15496:15525  address public charityAddress */\n    tag_19:\n      sload(0x0d)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":15278:15303  address public rndAddress */\n    tag_20:\n      sload(0x07)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":15348:15378  address public treasuryAddress */\n    tag_21:\n      sload(0x09)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":15418:15451  address public partnershipAddress */\n    tag_22:\n      sload(0x0b)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":9109:9276  function allowance(... */\n    tag_23:\n      tag_45\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":9241:9259  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/GepsToken.sol\":9214:9221  uint256 */\n      0x00\n        /* \"contracts/GepsToken.sol\":9241:9259  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":9241:9252  _allowances */\n      0x01\n        /* \"contracts/GepsToken.sol\":9241:9259  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/GepsToken.sol\":9241:9268  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/GepsToken.sol\":9109:9276  function allowance(... */\n      jump\n        /* \"contracts/GepsToken.sol\":14467:14687  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_43\n      tag_105\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":15532:15561  address public reserveAddress */\n    tag_25:\n      sload(0x0e)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/GepsToken.sol\":8114:8205  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"contracts/GepsToken.sol\":8159:8172  string memory */\n      0x60\n        /* \"contracts/GepsToken.sol\":8192:8197  _name */\n      0x03\n        /* \"contracts/GepsToken.sol\":8185:8197  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GepsToken.sol\":8114:8205  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":9284:9499  function approve(... */\n    tag_36:\n        /* \"contracts/GepsToken.sol\":9382:9386  bool */\n      0x00\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      caller\n        /* \"contracts/GepsToken.sol\":9438:9469  _approve(owner, spender, value) */\n      tag_120\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      dup2\n        /* \"contracts/GepsToken.sol\":9454:9461  spender */\n      dup6\n        /* \"contracts/GepsToken.sol\":9463:9468  value */\n      dup6\n        /* \"contracts/GepsToken.sol\":9438:9446  _approve */\n      tag_121\n        /* \"contracts/GepsToken.sol\":9438:9469  _approve(owner, spender, value) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/GepsToken.sol\":9487:9491  true */\n      0x01\n        /* \"contracts/GepsToken.sol\":9480:9491  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/GepsToken.sol\":9284:9499  function approve(... */\n    tag_117:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":16379:17038  function mint() external onlyOwner {... */\n    tag_44:\n        /* \"contracts/GepsToken.sol\":13903:13916  _checkOwner() */\n      tag_123\n        /* \"contracts/GepsToken.sol\":13903:13914  _checkOwner */\n      tag_124\n        /* \"contracts/GepsToken.sol\":13903:13916  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/GepsToken.sol\":16434:16440  minted */\n      sload(0x0e)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GepsToken.sol\":16433:16440  !minted */\n      iszero\n        /* \"contracts/GepsToken.sol\":16425:16476  require(!minted, \"Tokens have already been minted\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3113:3115   */\n      0x20\n        /* \"contracts/GepsToken.sol\":16425:16476  require(!minted, \"Tokens have already been minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3095:3116   */\n      mstore\n        /* \"#utility.yul\":3152:3154   */\n      0x1f\n        /* \"#utility.yul\":3132:3150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3125:3155   */\n      mstore\n        /* \"#utility.yul\":3191:3224   */\n      0x546f6b656e73206861766520616c7265616479206265656e206d696e74656400\n        /* \"#utility.yul\":3171:3189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3164:3225   */\n      mstore\n        /* \"#utility.yul\":3242:3260   */\n      0x64\n      add\n        /* \"contracts/GepsToken.sol\":16425:16476  require(!minted, \"Tokens have already been minted\") */\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/GepsToken.sol\":16487:16493  minted */\n      0x0e\n        /* \"contracts/GepsToken.sol\":16487:16500  minted = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/GepsToken.sol\":16517:16531  presaleAddress */\n      sload(0x06)\n        /* \"contracts/GepsToken.sol\":16511:16553  _mint(presaleAddress, 20000000 * 10 ** 18) */\n      tag_129\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16517:16531  presaleAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16533:16552  20000000 * 10 ** 18 */\n      0x108b2a2c28029094000000\n        /* \"contracts/GepsToken.sol\":16511:16516  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16511:16553  _mint(presaleAddress, 20000000 * 10 ** 18) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/GepsToken.sol\":16577:16587  rndAddress */\n      sload(0x07)\n        /* \"contracts/GepsToken.sol\":16571:16608  _mint(rndAddress, 2500000 * 10 ** 18) */\n      tag_131\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16577:16587  rndAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16589:16607  2500000 * 10 ** 18 */\n      0x0211654585005212800000\n        /* \"contracts/GepsToken.sol\":16571:16576  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16571:16608  _mint(rndAddress, 2500000 * 10 ** 18) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/GepsToken.sol\":16631:16647  marketingAddress */\n      sload(0x08)\n        /* \"contracts/GepsToken.sol\":16625:16668  _mint(marketingAddress, 2500000 * 10 ** 18) */\n      tag_132\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16631:16647  marketingAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16649:16667  2500000 * 10 ** 18 */\n      0x0211654585005212800000\n        /* \"contracts/GepsToken.sol\":16625:16630  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16625:16668  _mint(marketingAddress, 2500000 * 10 ** 18) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/GepsToken.sol\":16691:16706  treasuryAddress */\n      sload(0x09)\n        /* \"contracts/GepsToken.sol\":16685:16727  _mint(treasuryAddress, 5000000 * 10 ** 18) */\n      tag_133\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16691:16706  treasuryAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16708:16726  5000000 * 10 ** 18 */\n      0x0422ca8b0a00a425000000\n        /* \"contracts/GepsToken.sol\":16685:16690  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16685:16727  _mint(treasuryAddress, 5000000 * 10 ** 18) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/GepsToken.sol\":16751:16762  teamAddress */\n      sload(0x0a)\n        /* \"contracts/GepsToken.sol\":16745:16783  _mint(teamAddress, 5000000 * 10 ** 18) */\n      tag_134\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16751:16762  teamAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16764:16782  5000000 * 10 ** 18 */\n      0x0422ca8b0a00a425000000\n        /* \"contracts/GepsToken.sol\":16745:16750  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16745:16783  _mint(teamAddress, 5000000 * 10 ** 18) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/GepsToken.sol\":16807:16825  partnershipAddress */\n      sload(0x0b)\n        /* \"contracts/GepsToken.sol\":16801:16846  _mint(partnershipAddress, 2500000 * 10 ** 18) */\n      tag_135\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16807:16825  partnershipAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16827:16845  2500000 * 10 ** 18 */\n      0x0211654585005212800000\n        /* \"contracts/GepsToken.sol\":16801:16806  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16801:16846  _mint(partnershipAddress, 2500000 * 10 ** 18) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/GepsToken.sol\":16869:16885  liquidityAddress */\n      sload(0x0c)\n        /* \"contracts/GepsToken.sol\":16863:16906  _mint(liquidityAddress, 5000000 * 10 ** 18) */\n      tag_136\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16869:16885  liquidityAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16887:16905  5000000 * 10 ** 18 */\n      0x0422ca8b0a00a425000000\n        /* \"contracts/GepsToken.sol\":16863:16868  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16863:16906  _mint(liquidityAddress, 5000000 * 10 ** 18) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/GepsToken.sol\":16930:16944  charityAddress */\n      sload(0x0d)\n        /* \"contracts/GepsToken.sol\":16924:16965  _mint(charityAddress, 2500000 * 10 ** 18) */\n      tag_137\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16930:16944  charityAddress */\n      and\n        /* \"contracts/GepsToken.sol\":16946:16964  2500000 * 10 ** 18 */\n      0x0211654585005212800000\n        /* \"contracts/GepsToken.sol\":16924:16929  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16924:16965  _mint(charityAddress, 2500000 * 10 ** 18) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/GepsToken.sol\":16988:17002  reserveAddress */\n      sload(0x0e)\n        /* \"contracts/GepsToken.sol\":16982:17023  _mint(reserveAddress, 5000000 * 10 ** 18) */\n      tag_138\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":16988:17002  reserveAddress */\n      and\n        /* \"contracts/GepsToken.sol\":17004:17022  5000000 * 10 ** 18 */\n      0x0422ca8b0a00a425000000\n        /* \"contracts/GepsToken.sol\":16982:16987  _mint */\n      tag_130\n        /* \"contracts/GepsToken.sol\":16982:17023  _mint(reserveAddress, 5000000 * 10 ** 18) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/GepsToken.sol\":16379:17038  function mint() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":9507:9790  function transferFrom(... */\n    tag_55:\n        /* \"contracts/GepsToken.sol\":9628:9632  bool */\n      0x00\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      caller\n        /* \"contracts/GepsToken.sol\":9686:9723  _spendAllowance(from, spender, value) */\n      tag_142\n        /* \"contracts/GepsToken.sol\":9702:9706  from */\n      dup6\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      dup3\n        /* \"contracts/GepsToken.sol\":9717:9722  value */\n      dup6\n        /* \"contracts/GepsToken.sol\":9686:9701  _spendAllowance */\n      tag_143\n        /* \"contracts/GepsToken.sol\":9686:9723  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/GepsToken.sol\":9734:9760  _transfer(from, to, value) */\n      tag_144\n        /* \"contracts/GepsToken.sol\":9744:9748  from */\n      dup6\n        /* \"contracts/GepsToken.sol\":9750:9752  to */\n      dup6\n        /* \"contracts/GepsToken.sol\":9754:9759  value */\n      dup6\n        /* \"contracts/GepsToken.sol\":9734:9743  _transfer */\n      tag_145\n        /* \"contracts/GepsToken.sol\":9734:9760  _transfer(from, to, value) */\n      jump\t// in\n    tag_144:\n      pop\n        /* \"contracts/GepsToken.sol\":9778:9782  true */\n      0x01\n      swap5\n        /* \"contracts/GepsToken.sol\":9507:9790  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":14356:14459  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"contracts/GepsToken.sol\":13903:13916  _checkOwner() */\n      tag_149\n        /* \"contracts/GepsToken.sol\":13903:13914  _checkOwner */\n      tag_124\n        /* \"contracts/GepsToken.sol\":13903:13916  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/GepsToken.sol\":14421:14451  _transferOwnership(address(0)) */\n      tag_138\n        /* \"contracts/GepsToken.sol\":14448:14449  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":14421:14439  _transferOwnership */\n      tag_152\n        /* \"contracts/GepsToken.sol\":14421:14451  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":8324:8419  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"contracts/GepsToken.sol\":8371:8384  string memory */\n      0x60\n        /* \"contracts/GepsToken.sol\":8404:8411  _symbol */\n      0x04\n        /* \"contracts/GepsToken.sol\":8397:8411  return _symbol */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":8864:9046  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"contracts/GepsToken.sol\":8933:8937  bool */\n      0x00\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      caller\n        /* \"contracts/GepsToken.sol\":8989:9016  _transfer(owner, to, value) */\n      tag_120\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      dup2\n        /* \"contracts/GepsToken.sol\":9006:9008  to */\n      dup6\n        /* \"contracts/GepsToken.sol\":9010:9015  value */\n      dup6\n        /* \"contracts/GepsToken.sol\":8989:8998  _transfer */\n      tag_145\n        /* \"contracts/GepsToken.sol\":8989:9016  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":14467:14687  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"contracts/GepsToken.sol\":13903:13916  _checkOwner() */\n      tag_165\n        /* \"contracts/GepsToken.sol\":13903:13914  _checkOwner */\n      tag_124\n        /* \"contracts/GepsToken.sol\":13903:13916  _checkOwner() */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":14552:14574  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/GepsToken.sol\":14548:14641  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"contracts/GepsToken.sol\":14598:14629  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":14626:14627  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":14598:14629  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1258:1309   */\n      mstore\n        /* \"#utility.yul\":1231:1249   */\n      0x24\n      add\n        /* \"contracts/GepsToken.sol\":14598:14629  OwnableInvalidOwner(address(0)) */\n      tag_127\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":14548:14641  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"contracts/GepsToken.sol\":14651:14679  _transferOwnership(newOwner) */\n      tag_169\n        /* \"contracts/GepsToken.sol\":14670:14678  newOwner */\n      dup2\n        /* \"contracts/GepsToken.sol\":14651:14669  _transferOwnership */\n      tag_152\n        /* \"contracts/GepsToken.sol\":14651:14679  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/GepsToken.sol\":14467:14687  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":11739:11869  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_121:\n        /* \"contracts/GepsToken.sol\":11824:11861  _approve(owner, spender, value, true) */\n      tag_172\n        /* \"contracts/GepsToken.sol\":11833:11838  owner */\n      dup4\n        /* \"contracts/GepsToken.sol\":11840:11847  spender */\n      dup4\n        /* \"contracts/GepsToken.sol\":11849:11854  value */\n      dup4\n        /* \"contracts/GepsToken.sol\":11856:11860  true */\n      0x01\n        /* \"contracts/GepsToken.sol\":11824:11832  _approve */\n      tag_173\n        /* \"contracts/GepsToken.sol\":11824:11861  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/GepsToken.sol\":11739:11869  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":14182:14348  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"contracts/GepsToken.sol\":14090:14096  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      caller\n        /* \"contracts/GepsToken.sol\":14242:14265  owner() != _msgSender() */\n      eq\n        /* \"contracts/GepsToken.sol\":14238:14341  if (owner() != _msgSender()) {... */\n      tag_138\n      jumpi\n        /* \"contracts/GepsToken.sol\":14289:14329  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":2551:2561  msg.sender */\n      caller\n        /* \"contracts/GepsToken.sol\":14289:14329  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1258:1309   */\n      mstore\n        /* \"#utility.yul\":1231:1249   */\n      0x24\n      add\n        /* \"contracts/GepsToken.sol\":14289:14329  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_127\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":11299:11512  function _mint(address account, uint256 value) internal {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":11370:11391  account == address(0) */\n      dup3\n      and\n        /* \"contracts/GepsToken.sol\":11366:11459  if (account == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"contracts/GepsToken.sol\":11415:11447  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":11444:11445  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":11415:11447  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1258:1309   */\n      mstore\n        /* \"#utility.yul\":1231:1249   */\n      0x24\n      add\n        /* \"contracts/GepsToken.sol\":11415:11447  ERC20InvalidReceiver(address(0)) */\n      tag_127\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":11366:11459  if (account == address(0)) {... */\n    tag_181:\n        /* \"contracts/GepsToken.sol\":11469:11504  _update(address(0), account, value) */\n      tag_183\n        /* \"contracts/GepsToken.sol\":11485:11486  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":11489:11496  account */\n      dup4\n        /* \"contracts/GepsToken.sol\":11498:11503  value */\n      dup4\n        /* \"contracts/GepsToken.sol\":11469:11476  _update */\n      tag_184\n        /* \"contracts/GepsToken.sol\":11469:11504  _update(address(0), account, value) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/GepsToken.sol\":11299:11512  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":12371:12974  function _spendAllowance(... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":9241:9259  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"contracts/GepsToken.sol\":12505:12529  uint256 currentAllowance */\n      0x00\n        /* \"contracts/GepsToken.sol\":9241:9259  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":9241:9252  _allowances */\n      0x01\n        /* \"contracts/GepsToken.sol\":9241:9259  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/GepsToken.sol\":9241:9268  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/GepsToken.sol\":12572:12609  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/GepsToken.sol\":12568:12967  if (currentAllowance != type(uint256).max) {... */\n      tag_191\n      jumpi\n        /* \"contracts/GepsToken.sol\":12649:12654  value */\n      dup2\n        /* \"contracts/GepsToken.sol\":12630:12646  currentAllowance */\n      dup2\n        /* \"contracts/GepsToken.sol\":12630:12654  currentAllowance < value */\n      lt\n        /* \"contracts/GepsToken.sol\":12626:12840  if (currentAllowance < value) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/GepsToken.sol\":12682:12824  ERC20InsufficientAllowance(... */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3491:3523   */\n      dup5\n      and\n        /* \"contracts/GepsToken.sol\":12682:12824  ERC20InsufficientAllowance(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3473:3524   */\n      mstore\n        /* \"#utility.yul\":3540:3558   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3533:3567   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3583:3601   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3576:3610   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3446:3464   */\n      0x64\n      add\n        /* \"contracts/GepsToken.sol\":12682:12824  ERC20InsufficientAllowance(... */\n      tag_127\n        /* \"#utility.yul\":3271:3616   */\n      jump\n        /* \"contracts/GepsToken.sol\":12626:12840  if (currentAllowance < value) {... */\n    tag_188:\n        /* \"contracts/GepsToken.sol\":12883:12940  _approve(owner, spender, currentAllowance - value, false) */\n      tag_191\n        /* \"contracts/GepsToken.sol\":12892:12897  owner */\n      dup5\n        /* \"contracts/GepsToken.sol\":12899:12906  spender */\n      dup5\n        /* \"contracts/GepsToken.sol\":12927:12932  value */\n      dup5\n        /* \"contracts/GepsToken.sol\":12908:12924  currentAllowance */\n      dup5\n        /* \"contracts/GepsToken.sol\":12908:12932  currentAllowance - value */\n      sub\n        /* \"contracts/GepsToken.sol\":12934:12939  false */\n      0x00\n        /* \"contracts/GepsToken.sol\":12883:12891  _approve */\n      tag_173\n        /* \"contracts/GepsToken.sol\":12883:12940  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/GepsToken.sol\":12494:12974  {... */\n      pop\n        /* \"contracts/GepsToken.sol\":12371:12974  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":17046:18002  function _transfer(... */\n    tag_145:\n        /* \"contracts/GepsToken.sol\":14090:14096  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":17191:17208  sender == owner() */\n      dup5\n      dup2\n      and\n        /* \"contracts/GepsToken.sol\":14090:14096  _owner */\n      swap2\n      and\n        /* \"contracts/GepsToken.sol\":17191:17208  sender == owner() */\n      eq\n      dup1\n        /* \"contracts/GepsToken.sol\":17191:17232  sender == owner() || recipient == owner() */\n      tag_194\n      jumpi\n      pop\n        /* \"contracts/GepsToken.sol\":14090:14096  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":17212:17232  recipient == owner() */\n      dup4\n      dup2\n      and\n        /* \"contracts/GepsToken.sol\":14090:14096  _owner */\n      swap2\n      and\n        /* \"contracts/GepsToken.sol\":17212:17232  recipient == owner() */\n      eq\n        /* \"contracts/GepsToken.sol\":17191:17232  sender == owner() || recipient == owner() */\n    tag_194:\n        /* \"contracts/GepsToken.sol\":17187:17995  if (sender == owner() || recipient == owner()) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/GepsToken.sol\":17327:17369  super._transfer(sender, recipient, amount) */\n      tag_172\n        /* \"contracts/GepsToken.sol\":17343:17349  sender */\n      dup4\n        /* \"contracts/GepsToken.sol\":17351:17360  recipient */\n      dup4\n        /* \"contracts/GepsToken.sol\":17362:17368  amount */\n      dup4\n        /* \"contracts/GepsToken.sol\":17327:17342  super._transfer */\n      tag_198\n        /* \"contracts/GepsToken.sol\":17327:17369  super._transfer(sender, recipient, amount) */\n      jump\t// in\n        /* \"contracts/GepsToken.sol\":17187:17995  if (sender == owner() || recipient == owner()) {... */\n    tag_196:\n        /* \"contracts/GepsToken.sol\":17443:17460  uint256 taxAmount */\n      0x00\n        /* \"contracts/GepsToken.sol\":17488:17491  100 */\n      0x64\n        /* \"contracts/GepsToken.sol\":17464:17484  amount * TAX_PERCENT */\n      tag_200\n        /* \"contracts/GepsToken.sol\":15232:15233  2 */\n      0x02\n        /* \"contracts/GepsToken.sol\":17464:17470  amount */\n      dup5\n        /* \"contracts/GepsToken.sol\":17464:17484  amount * TAX_PERCENT */\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/GepsToken.sol\":17463:17491  (amount * TAX_PERCENT) / 100 */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"contracts/GepsToken.sol\":17443:17491  uint256 taxAmount = (amount * TAX_PERCENT) / 100 */\n      swap1\n      pop\n        /* \"contracts/GepsToken.sol\":17506:17528  uint256 transferAmount */\n      0x00\n        /* \"contracts/GepsToken.sol\":17531:17549  amount - taxAmount */\n      tag_204\n        /* \"contracts/GepsToken.sol\":17443:17491  uint256 taxAmount = (amount * TAX_PERCENT) / 100 */\n      dup3\n        /* \"contracts/GepsToken.sol\":17531:17537  amount */\n      dup5\n        /* \"contracts/GepsToken.sol\":17531:17549  amount - taxAmount */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/GepsToken.sol\":17506:17549  uint256 transferAmount = amount - taxAmount */\n      swap1\n      pop\n        /* \"contracts/GepsToken.sol\":17622:17637  uint256 halfTax */\n      0x00\n        /* \"contracts/GepsToken.sol\":17640:17653  taxAmount / 2 */\n      tag_206\n        /* \"contracts/GepsToken.sol\":17652:17653  2 */\n      0x02\n        /* \"contracts/GepsToken.sol\":17640:17649  taxAmount */\n      dup5\n        /* \"contracts/GepsToken.sol\":17640:17653  taxAmount / 2 */\n      tag_203\n      jump\t// in\n    tag_206:\n        /* \"contracts/GepsToken.sol\":17622:17653  uint256 halfTax = taxAmount / 2 */\n      swap1\n      pop\n        /* \"contracts/GepsToken.sol\":17668:17688  uint256 remainingTax */\n      0x00\n        /* \"contracts/GepsToken.sol\":17691:17710  taxAmount - halfTax */\n      tag_207\n        /* \"contracts/GepsToken.sol\":17622:17653  uint256 halfTax = taxAmount / 2 */\n      dup3\n        /* \"contracts/GepsToken.sol\":17691:17700  taxAmount */\n      dup6\n        /* \"contracts/GepsToken.sol\":17691:17710  taxAmount - halfTax */\n      tag_205\n      jump\t// in\n    tag_207:\n        /* \"contracts/GepsToken.sol\":17825:17840  treasuryAddress */\n      sload(0x09)\n        /* \"contracts/GepsToken.sol\":17668:17710  uint256 remainingTax = taxAmount - halfTax */\n      swap1\n      swap2\n      pop\n        /* \"contracts/GepsToken.sol\":17801:17850  super._transfer(sender, treasuryAddress, halfTax) */\n      tag_208\n      swap1\n        /* \"contracts/GepsToken.sol\":17817:17823  sender */\n      dup9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":17825:17840  treasuryAddress */\n      and\n        /* \"contracts/GepsToken.sol\":17842:17849  halfTax */\n      dup5\n        /* \"contracts/GepsToken.sol\":17801:17816  super._transfer */\n      tag_198\n        /* \"contracts/GepsToken.sol\":17801:17850  super._transfer(sender, treasuryAddress, halfTax) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/GepsToken.sol\":17889:17903  charityAddress */\n      sload(0x0d)\n        /* \"contracts/GepsToken.sol\":17865:17918  super._transfer(sender, charityAddress, remainingTax) */\n      tag_209\n      swap1\n        /* \"contracts/GepsToken.sol\":17881:17887  sender */\n      dup9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":17889:17903  charityAddress */\n      and\n        /* \"contracts/GepsToken.sol\":17905:17917  remainingTax */\n      dup4\n        /* \"contracts/GepsToken.sol\":17865:17880  super._transfer */\n      tag_198\n        /* \"contracts/GepsToken.sol\":17865:17918  super._transfer(sender, charityAddress, remainingTax) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/GepsToken.sol\":17933:17983  super._transfer(sender, recipient, transferAmount) */\n      tag_210\n        /* \"contracts/GepsToken.sol\":17949:17955  sender */\n      dup8\n        /* \"contracts/GepsToken.sol\":17957:17966  recipient */\n      dup8\n        /* \"contracts/GepsToken.sol\":17968:17982  transferAmount */\n      dup6\n        /* \"contracts/GepsToken.sol\":17933:17948  super._transfer */\n      tag_198\n        /* \"contracts/GepsToken.sol\":17933:17983  super._transfer(sender, recipient, transferAmount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/GepsToken.sol\":17387:17995  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/GepsToken.sol\":17046:18002  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":14847:15038  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_152:\n        /* \"contracts/GepsToken.sol\":14940:14946  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":14957:14974  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/GepsToken.sol\":14990:15030  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/GepsToken.sol\":14940:14946  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/GepsToken.sol\":14957:14974  _owner = newOwner */\n      swap1\n        /* \"contracts/GepsToken.sol\":14940:14946  _owner */\n      dup3\n      swap1\n        /* \"contracts/GepsToken.sol\":14990:15030  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/GepsToken.sol\":14921:14937  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/GepsToken.sol\":14990:15030  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/GepsToken.sol\":14910:15038  {... */\n      pop\n        /* \"contracts/GepsToken.sol\":14847:15038  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":11877:12363  function _approve(... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":12033:12052  owner == address(0) */\n      dup5\n      and\n        /* \"contracts/GepsToken.sol\":12029:12120  if (owner == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"contracts/GepsToken.sol\":12076:12108  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":12105:12106  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":12076:12108  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1258:1309   */\n      mstore\n        /* \"#utility.yul\":1231:1249   */\n      0x24\n      add\n        /* \"contracts/GepsToken.sol\":12076:12108  ERC20InvalidApprover(address(0)) */\n      tag_127\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":12029:12120  if (owner == address(0)) {... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":12134:12155  spender == address(0) */\n      dup4\n      and\n        /* \"contracts/GepsToken.sol\":12130:12222  if (spender == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"contracts/GepsToken.sol\":12179:12210  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":12207:12208  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":12179:12210  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1258:1309   */\n      mstore\n        /* \"#utility.yul\":1231:1249   */\n      0x24\n      add\n        /* \"contracts/GepsToken.sol\":12179:12210  ERC20InvalidSpender(address(0)) */\n      tag_127\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":12130:12222  if (spender == address(0)) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":12232:12250  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":12232:12243  _allowances */\n      0x01\n        /* \"contracts/GepsToken.sol\":12232:12250  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/GepsToken.sol\":12232:12259  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/GepsToken.sol\":12232:12267  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/GepsToken.sol\":12278:12356  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_191\n      jumpi\n        /* \"contracts/GepsToken.sol\":12329:12336  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":12313:12344  Approval(owner, spender, value) */\n      and\n        /* \"contracts/GepsToken.sol\":12322:12327  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":12313:12344  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/GepsToken.sol\":12338:12343  value */\n      dup5\n        /* \"contracts/GepsToken.sol\":12313:12344  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_218\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"contracts/GepsToken.sol\":12313:12344  Approval(owner, spender, value) */\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GepsToken.sol\":11877:12363  function _approve(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":10156:11291  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":10246:10264  from == address(0) */\n      dup4\n      and\n        /* \"contracts/GepsToken.sol\":10242:10794  if (from == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"contracts/GepsToken.sol\":10400:10405  value */\n      dup1\n        /* \"contracts/GepsToken.sol\":10384:10396  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/GepsToken.sol\":10384:10405  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/GepsToken.sol\":10242:10794  if (from == address(0)) {... */\n      tag_223\n      swap1\n      pop\n      jump\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":10460:10475  _balances[from] */\n      dup4\n      and\n        /* \"contracts/GepsToken.sol\":10438:10457  uint256 fromBalance */\n      0x00\n        /* \"contracts/GepsToken.sol\":10460:10475  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/GepsToken.sol\":10494:10513  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contracts/GepsToken.sol\":10490:10607  if (fromBalance < value) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/GepsToken.sol\":10541:10591  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3491:3523   */\n      dup6\n      and\n        /* \"contracts/GepsToken.sol\":10541:10591  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3473:3524   */\n      mstore\n        /* \"#utility.yul\":3540:3558   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3533:3567   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3583:3601   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3576:3610   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3446:3464   */\n      0x64\n      add\n        /* \"contracts/GepsToken.sol\":10541:10591  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_127\n        /* \"#utility.yul\":3271:3616   */\n      jump\n        /* \"contracts/GepsToken.sol\":10490:10607  if (fromBalance < value) {... */\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":10730:10745  _balances[from] */\n      dup5\n      and\n        /* \"contracts/GepsToken.sol\":10730:10739  _balances */\n      0x00\n        /* \"contracts/GepsToken.sol\":10730:10745  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/GepsToken.sol\":10748:10767  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"contracts/GepsToken.sol\":10730:10767  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"contracts/GepsToken.sol\":10242:10794  if (from == address(0)) {... */\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":10810:10826  to == address(0) */\n      dup3\n      and\n        /* \"contracts/GepsToken.sol\":10806:11241  if (to == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"contracts/GepsToken.sol\":10976:10988  _totalSupply */\n      0x02\n        /* \"contracts/GepsToken.sol\":10976:10997  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/GepsToken.sol\":10806:11241  if (to == address(0)) {... */\n      jump(tag_227)\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":11192:11205  _balances[to] */\n      dup3\n      and\n        /* \"contracts/GepsToken.sol\":11192:11201  _balances */\n      0x00\n        /* \"contracts/GepsToken.sol\":11192:11205  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/GepsToken.sol\":11192:11214  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/GepsToken.sol\":10806:11241  if (to == address(0)) {... */\n    tag_227:\n        /* \"contracts/GepsToken.sol\":11273:11275  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":11258:11283  Transfer(from, to, value) */\n      and\n        /* \"contracts/GepsToken.sol\":11267:11271  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":11258:11283  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GepsToken.sol\":11277:11282  value */\n      dup4\n        /* \"contracts/GepsToken.sol\":11258:11283  Transfer(from, to, value) */\n      mload(0x40)\n      tag_228\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"contracts/GepsToken.sol\":11258:11283  Transfer(from, to, value) */\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GepsToken.sol\":10156:11291  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GepsToken.sol\":9798:10148  function _transfer(... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":9924:9942  from == address(0) */\n      dup4\n      and\n        /* \"contracts/GepsToken.sol\":9920:10008  if (from == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"contracts/GepsToken.sol\":9966:9996  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":9993:9994  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":9966:9996  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1258:1309   */\n      mstore\n        /* \"#utility.yul\":1231:1249   */\n      0x24\n      add\n        /* \"contracts/GepsToken.sol\":9966:9996  ERC20InvalidSender(address(0)) */\n      tag_127\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":9920:10008  if (from == address(0)) {... */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/GepsToken.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"contracts/GepsToken.sol\":10018:10106  if (to == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"contracts/GepsToken.sol\":10062:10094  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/GepsToken.sol\":10091:10092  0 */\n      0x00\n        /* \"contracts/GepsToken.sol\":10062:10094  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1258:1309   */\n      mstore\n        /* \"#utility.yul\":1231:1249   */\n      0x24\n      add\n        /* \"contracts/GepsToken.sol\":10062:10094  ERC20InvalidReceiver(address(0)) */\n      tag_127\n        /* \"#utility.yul\":1112:1315   */\n      jump\n        /* \"contracts/GepsToken.sol\":10018:10106  if (to == address(0)) {... */\n    tag_232:\n        /* \"contracts/GepsToken.sol\":10116:10140  _update(from, to, value) */\n      tag_172\n        /* \"contracts/GepsToken.sol\":10124:10128  from */\n      dup4\n        /* \"contracts/GepsToken.sol\":10130:10132  to */\n      dup4\n        /* \"contracts/GepsToken.sol\":10134:10139  value */\n      dup4\n        /* \"contracts/GepsToken.sol\":10116:10123  _update */\n      tag_184\n        /* \"contracts/GepsToken.sol\":10116:10140  _update(from, to, value) */\n      jump\t// in\n        /* \"#utility.yul\":14:432   */\n    tag_32:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_235:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_240:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_35:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_242:\n        /* \"#utility.yul\":783:812   */\n      tag_243\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_235\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1502:1876   */\n    tag_54:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1587:1593   */\n      dup1\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x60\n        /* \"#utility.yul\":1636:1645   */\n      dup5\n        /* \"#utility.yul\":1627:1634   */\n      dup7\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_248:\n        /* \"#utility.yul\":1687:1716   */\n      tag_249\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1687:1716   */\n      tag_235\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1677:1716   */\n      swap3\n      pop\n        /* \"#utility.yul\":1735:1773   */\n      tag_250\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup6\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1735:1773   */\n      tag_235\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1502:1876   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1725:1773   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1842:1844   */\n      0x40\n        /* \"#utility.yul\":1827:1845   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1814:1846   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1502:1876   */\n      jump\t// out\n        /* \"#utility.yul\":2070:2256   */\n    tag_69:\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x20\n        /* \"#utility.yul\":2170:2179   */\n      dup3\n        /* \"#utility.yul\":2161:2168   */\n      dup5\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      dup1\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_253:\n        /* \"#utility.yul\":2221:2250   */\n      tag_254\n        /* \"#utility.yul\":2240:2249   */\n      dup3\n        /* \"#utility.yul\":2221:2250   */\n      tag_235\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2211:2250   */\n      swap4\n        /* \"#utility.yul\":2070:2256   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2521   */\n    tag_101:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      dup1\n        /* \"#utility.yul\":2390:2392   */\n      0x40\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2369:2376   */\n      dup6\n        /* \"#utility.yul\":2365:2388   */\n      sub\n        /* \"#utility.yul\":2361:2393   */\n      slt\n        /* \"#utility.yul\":2358:2410   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      dup1\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2358:2410   */\n    tag_256:\n        /* \"#utility.yul\":2429:2458   */\n      tag_257\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2429:2458   */\n      tag_235\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2419:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2477:2515   */\n      tag_258\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup5\n        /* \"#utility.yul\":2496:2514   */\n      add\n        /* \"#utility.yul\":2477:2515   */\n      tag_235\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2467:2515   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2906   */\n    tag_112:\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2601:2613   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2648:2660   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2669:2730   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2723:2727   */\n      0x7f\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2711:2728   */\n      and\n        /* \"#utility.yul\":2701:2728   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2730   */\n    tag_260:\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      lt\n        /* \"#utility.yul\":2745:2763   */\n      dup2\n        /* \"#utility.yul\":2742:2780   */\n      sub\n        /* \"#utility.yul\":2739:2900   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x22\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2739:2900   */\n    tag_261:\n      pop\n        /* \"#utility.yul\":2526:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3621:3748   */\n    tag_236:\n        /* \"#utility.yul\":3682:3692   */\n      0x4e487b71\n        /* \"#utility.yul\":3677:3680   */\n      0xe0\n        /* \"#utility.yul\":3673:3693   */\n      shl\n        /* \"#utility.yul\":3670:3671   */\n      0x00\n        /* \"#utility.yul\":3663:3694   */\n      mstore\n        /* \"#utility.yul\":3713:3717   */\n      0x11\n        /* \"#utility.yul\":3710:3711   */\n      0x04\n        /* \"#utility.yul\":3703:3718   */\n      mstore\n        /* \"#utility.yul\":3737:3741   */\n      0x24\n        /* \"#utility.yul\":3734:3735   */\n      0x00\n        /* \"#utility.yul\":3727:3742   */\n      revert\n        /* \"#utility.yul\":3753:3921   */\n    tag_201:\n        /* \"#utility.yul\":3826:3835   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3857:3866   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3874:3889   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3868:3890   */\n      dup5\n      eq\n        /* \"#utility.yul\":3854:3891   */\n      or\n        /* \"#utility.yul\":3844:3915   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":3895:3913   */\n      tag_117\n      tag_236\n      jump\t// in\n        /* \"#utility.yul\":3926:4143   */\n    tag_203:\n        /* \"#utility.yul\":3966:3967   */\n      0x00\n        /* \"#utility.yul\":3992:3993   */\n      dup3\n        /* \"#utility.yul\":3982:4114   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4036:4046   */\n      0x4e487b71\n        /* \"#utility.yul\":4031:4034   */\n      0xe0\n        /* \"#utility.yul\":4027:4047   */\n      shl\n        /* \"#utility.yul\":4024:4025   */\n      0x00\n        /* \"#utility.yul\":4017:4048   */\n      mstore\n        /* \"#utility.yul\":4071:4075   */\n      0x12\n        /* \"#utility.yul\":4068:4069   */\n      0x04\n        /* \"#utility.yul\":4061:4076   */\n      mstore\n        /* \"#utility.yul\":4099:4103   */\n      0x24\n        /* \"#utility.yul\":4096:4097   */\n      0x00\n        /* \"#utility.yul\":4089:4104   */\n      revert\n        /* \"#utility.yul\":3982:4114   */\n    tag_269:\n      pop\n        /* \"#utility.yul\":4128:4137   */\n      div\n      swap1\n        /* \"#utility.yul\":3926:4143   */\n      jump\t// out\n        /* \"#utility.yul\":4148:4276   */\n    tag_205:\n        /* \"#utility.yul\":4215:4224   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4236:4247   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4233:4270   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4250:4268   */\n      tag_117\n      tag_236\n      jump\t// in\n        /* \"#utility.yul\":4281:4406   */\n    tag_222:\n        /* \"#utility.yul\":4346:4355   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4367:4377   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4364:4400   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4380:4398   */\n      tag_117\n      tag_236\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220b91b4c15555b81f6244ec65357cb27a44cc2d7b5f0677d83ce76b94c66569c0164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_292": {
									"entryPoint": null,
									"id": 292,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_790": {
									"entryPoint": null,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_986": {
									"entryPoint": null,
									"id": 986,
									"parameterSlots": 9,
									"returnSlots": 0
								},
								"@_transferOwnership_884": {
									"entryPoint": 349,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3941:1",
										"nodeType": "YulBlock",
										"src": "0:3941:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:1",
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nativeSrc": "84:22:1",
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nativeSrc": "93:13:1",
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:1",
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:1",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nativeSrc": "171:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nativeSrc": "171:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:1",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:1",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nativeSrc": "150:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:1",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nativeSrc": "146:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nativeSrc": "135:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nativeSrc": "125:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nativeSrc": "118:50:1",
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nativeSrc": "115:70:1",
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:1",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:1",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "413:677:1",
													"nodeType": "YulBlock",
													"src": "413:677:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "460:16:1",
																"nodeType": "YulBlock",
																"src": "460:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "469:1:1",
																					"nodeType": "YulLiteral",
																					"src": "469:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "472:1:1",
																					"nodeType": "YulLiteral",
																					"src": "472:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "462:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "462:6:1"
																			},
																			"nativeSrc": "462:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "462:12:1"
																		},
																		"nativeSrc": "462:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "462:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "434:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "434:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "443:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "443:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "430:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "430:3:1"
																		},
																		"nativeSrc": "430:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "430:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "455:3:1",
																		"nodeType": "YulLiteral",
																		"src": "455:3:1",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "426:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "426:3:1"
																},
																"nativeSrc": "426:33:1",
																"nodeType": "YulFunctionCall",
																"src": "426:33:1"
															},
															"nativeSrc": "423:53:1",
															"nodeType": "YulIf",
															"src": "423:53:1"
														},
														{
															"nativeSrc": "485:50:1",
															"nodeType": "YulAssignment",
															"src": "485:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "525:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "495:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "495:29:1"
																},
																"nativeSrc": "495:40:1",
																"nodeType": "YulFunctionCall",
																"src": "495:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "485:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																}
															]
														},
														{
															"nativeSrc": "544:59:1",
															"nodeType": "YulAssignment",
															"src": "544:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "599:2:1",
																				"nodeType": "YulLiteral",
																				"src": "599:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:1"
																		},
																		"nativeSrc": "584:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "554:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:1"
																},
																"nativeSrc": "554:49:1",
																"nodeType": "YulFunctionCall",
																"src": "554:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																}
															]
														},
														{
															"nativeSrc": "612:59:1",
															"nodeType": "YulAssignment",
															"src": "612:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "656:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "667:2:1",
																				"nodeType": "YulLiteral",
																				"src": "667:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "622:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:1"
																},
																"nativeSrc": "622:49:1",
																"nodeType": "YulFunctionCall",
																"src": "622:49:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "612:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:1"
																}
															]
														},
														{
															"nativeSrc": "680:59:1",
															"nodeType": "YulAssignment",
															"src": "680:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "724:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "735:2:1",
																				"nodeType": "YulLiteral",
																				"src": "735:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "720:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:1"
																		},
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "720:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "690:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:1"
																},
																"nativeSrc": "690:49:1",
																"nodeType": "YulFunctionCall",
																"src": "690:49:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "680:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:1"
																}
															]
														},
														{
															"nativeSrc": "748:60:1",
															"nodeType": "YulAssignment",
															"src": "748:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "792:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "803:3:1",
																				"nodeType": "YulLiteral",
																				"src": "803:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "788:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nativeSrc": "788:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "788:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "758:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:29:1"
																},
																"nativeSrc": "758:50:1",
																"nodeType": "YulFunctionCall",
																"src": "758:50:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "748:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "748:6:1"
																}
															]
														},
														{
															"nativeSrc": "817:60:1",
															"nodeType": "YulAssignment",
															"src": "817:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "861:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "872:3:1",
																				"nodeType": "YulLiteral",
																				"src": "872:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "857:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:1"
																		},
																		"nativeSrc": "857:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "857:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "827:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "827:29:1"
																},
																"nativeSrc": "827:50:1",
																"nodeType": "YulFunctionCall",
																"src": "827:50:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "817:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "817:6:1"
																}
															]
														},
														{
															"nativeSrc": "886:60:1",
															"nodeType": "YulAssignment",
															"src": "886:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "930:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:3:1",
																				"nodeType": "YulLiteral",
																				"src": "941:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "926:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:1"
																		},
																		"nativeSrc": "926:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "926:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "896:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "896:29:1"
																},
																"nativeSrc": "896:50:1",
																"nodeType": "YulFunctionCall",
																"src": "896:50:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:1"
																}
															]
														},
														{
															"nativeSrc": "955:60:1",
															"nodeType": "YulAssignment",
															"src": "955:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "999:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1010:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1010:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "995:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "995:3:1"
																		},
																		"nativeSrc": "995:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "995:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "965:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "965:29:1"
																},
																"nativeSrc": "965:50:1",
																"nodeType": "YulFunctionCall",
																"src": "965:50:1"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "955:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:1"
																}
															]
														},
														{
															"nativeSrc": "1024:60:1",
															"nodeType": "YulAssignment",
															"src": "1024:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1068:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1068:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1079:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1079:3:1",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1064:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1064:3:1"
																		},
																		"nativeSrc": "1064:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1064:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1034:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "1034:29:1"
																},
																"nativeSrc": "1034:50:1",
																"nodeType": "YulFunctionCall",
																"src": "1034:50:1"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "1024:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:894:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "315:9:1",
														"nodeType": "YulTypedName",
														"src": "315:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "326:7:1",
														"nodeType": "YulTypedName",
														"src": "326:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "338:6:1",
														"nodeType": "YulTypedName",
														"src": "338:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "346:6:1",
														"nodeType": "YulTypedName",
														"src": "346:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "354:6:1",
														"nodeType": "YulTypedName",
														"src": "354:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "362:6:1",
														"nodeType": "YulTypedName",
														"src": "362:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "370:6:1",
														"nodeType": "YulTypedName",
														"src": "370:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "378:6:1",
														"nodeType": "YulTypedName",
														"src": "378:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "386:6:1",
														"nodeType": "YulTypedName",
														"src": "386:6:1",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "394:6:1",
														"nodeType": "YulTypedName",
														"src": "394:6:1",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "402:6:1",
														"nodeType": "YulTypedName",
														"src": "402:6:1",
														"type": ""
													}
												],
												"src": "196:894:1"
											},
											{
												"body": {
													"nativeSrc": "1127:95:1",
													"nodeType": "YulBlock",
													"src": "1127:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1144:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1144:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1151:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1151:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1156:10:1",
																				"nodeType": "YulLiteral",
																				"src": "1156:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1147:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:1"
																		},
																		"nativeSrc": "1147:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1147:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1137:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:1"
																},
																"nativeSrc": "1137:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1137:31:1"
															},
															"nativeSrc": "1137:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1137:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1184:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1184:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1187:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1187:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1177:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:1"
																},
																"nativeSrc": "1177:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1177:15:1"
															},
															"nativeSrc": "1177:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1177:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1208:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1208:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1211:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1211:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1201:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1201:6:1"
																},
																"nativeSrc": "1201:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1201:15:1"
															},
															"nativeSrc": "1201:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1201:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1095:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1095:127:1"
											},
											{
												"body": {
													"nativeSrc": "1282:325:1",
													"nodeType": "YulBlock",
													"src": "1282:325:1",
													"statements": [
														{
															"nativeSrc": "1292:22:1",
															"nodeType": "YulAssignment",
															"src": "1292:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1306:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1309:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1309:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1302:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:3:1"
																},
																"nativeSrc": "1302:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														},
														{
															"nativeSrc": "1323:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1323:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1353:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1353:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1359:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1359:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1349:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1349:3:1"
																},
																"nativeSrc": "1349:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1349:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1327:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1327:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1400:31:1",
																"nodeType": "YulBlock",
																"src": "1400:31:1",
																"statements": [
																	{
																		"nativeSrc": "1402:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1402:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1416:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1416:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1424:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1424:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1412:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1412:3:1"
																			},
																			"nativeSrc": "1412:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1412:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1402:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1402:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1380:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1380:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1373:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1373:6:1"
																},
																"nativeSrc": "1373:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1373:26:1"
															},
															"nativeSrc": "1370:61:1",
															"nodeType": "YulIf",
															"src": "1370:61:1"
														},
														{
															"body": {
																"nativeSrc": "1490:111:1",
																"nodeType": "YulBlock",
																"src": "1490:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1511:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1511:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1518:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1518:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1523:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1523:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1514:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1514:3:1"
																					},
																					"nativeSrc": "1514:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1514:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1504:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1504:6:1"
																			},
																			"nativeSrc": "1504:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1504:31:1"
																		},
																		"nativeSrc": "1504:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1504:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1555:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1555:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1558:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1558:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1548:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1548:6:1"
																			},
																			"nativeSrc": "1548:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1548:15:1"
																		},
																		"nativeSrc": "1548:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1548:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1583:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1583:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1586:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1586:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1576:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1576:6:1"
																			},
																			"nativeSrc": "1576:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1576:15:1"
																		},
																		"nativeSrc": "1576:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1576:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1446:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1446:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1469:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1469:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1477:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1477:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1466:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1466:2:1"
																		},
																		"nativeSrc": "1466:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1466:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1443:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1443:2:1"
																},
																"nativeSrc": "1443:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1443:38:1"
															},
															"nativeSrc": "1440:161:1",
															"nodeType": "YulIf",
															"src": "1440:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1227:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1262:4:1",
														"nodeType": "YulTypedName",
														"src": "1262:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1271:6:1",
														"nodeType": "YulTypedName",
														"src": "1271:6:1",
														"type": ""
													}
												],
												"src": "1227:380:1"
											},
											{
												"body": {
													"nativeSrc": "1668:65:1",
													"nodeType": "YulBlock",
													"src": "1668:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1685:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1688:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1688:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																},
																"nativeSrc": "1678:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1678:14:1"
															},
															"nativeSrc": "1678:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1678:14:1"
														},
														{
															"nativeSrc": "1701:26:1",
															"nodeType": "YulAssignment",
															"src": "1701:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1719:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1719:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1722:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1722:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1709:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1709:9:1"
																},
																"nativeSrc": "1709:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1709:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1701:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1701:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1612:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1651:3:1",
														"nodeType": "YulTypedName",
														"src": "1651:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1659:4:1",
														"nodeType": "YulTypedName",
														"src": "1659:4:1",
														"type": ""
													}
												],
												"src": "1612:121:1"
											},
											{
												"body": {
													"nativeSrc": "1819:437:1",
													"nodeType": "YulBlock",
													"src": "1819:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:398:1",
																"nodeType": "YulBlock",
																"src": "1852:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1876:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1866:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1866:6:1"
																			},
																			"nativeSrc": "1866:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1866:16:1"
																		},
																		"nativeSrc": "1866:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1866:16:1"
																	},
																	{
																		"nativeSrc": "1895:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1895:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1920:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1920:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1907:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1907:9:1"
																			},
																			"nativeSrc": "1907:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1907:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1899:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1899:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1938:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1938:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1961:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1961:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1971:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1971:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1978:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1978:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1990:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1990:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1974:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1974:3:1"
																							},
																							"nativeSrc": "1974:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1974:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1967:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1967:3:1"
																					},
																					"nativeSrc": "1967:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1967:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1957:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1957:3:1"
																			},
																			"nativeSrc": "1957:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1957:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1942:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1942:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2032:23:1",
																			"nodeType": "YulBlock",
																			"src": "2032:23:1",
																			"statements": [
																				{
																					"nativeSrc": "2034:19:1",
																					"nodeType": "YulAssignment",
																					"src": "2034:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2049:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2049:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2034:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "2034:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2014:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "2014:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2026:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2026:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2011:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2011:2:1"
																			},
																			"nativeSrc": "2011:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2011:20:1"
																		},
																		"nativeSrc": "2008:47:1",
																		"nodeType": "YulIf",
																		"src": "2008:47:1"
																	},
																	{
																		"nativeSrc": "2068:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2068:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2082:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2082:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2092:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2092:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2099:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2099:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2104:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2104:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2095:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2095:3:1"
																							},
																							"nativeSrc": "2095:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2095:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2088:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2088:3:1"
																					},
																					"nativeSrc": "2088:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2088:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2078:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2078:3:1"
																			},
																			"nativeSrc": "2078:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2078:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2072:2:1",
																				"nodeType": "YulTypedName",
																				"src": "2072:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2122:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2122:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2135:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "2135:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2126:5:1",
																				"nodeType": "YulTypedName",
																				"src": "2126:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2220:20:1",
																			"nodeType": "YulBlock",
																			"src": "2220:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2229:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2229:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2236:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2236:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2222:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2222:6:1"
																						},
																						"nativeSrc": "2222:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2222:16:1"
																					},
																					"nativeSrc": "2222:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "2222:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2170:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2170:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2177:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2177:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2167:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2167:2:1"
																			},
																			"nativeSrc": "2167:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2167:13:1"
																		},
																		"nativeSrc": "2159:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2181:26:1",
																			"nodeType": "YulBlock",
																			"src": "2181:26:1",
																			"statements": [
																				{
																					"nativeSrc": "2183:22:1",
																					"nodeType": "YulAssignment",
																					"src": "2183:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2196:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2196:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2203:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2192:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2192:3:1"
																						},
																						"nativeSrc": "2192:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2192:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2183:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "2183:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2163:3:1",
																			"nodeType": "YulBlock",
																			"src": "2163:3:1",
																			"statements": []
																		},
																		"src": "2159:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1835:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1835:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1840:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1840:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1832:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1832:2:1"
																},
																"nativeSrc": "1832:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1832:11:1"
															},
															"nativeSrc": "1829:421:1",
															"nodeType": "YulIf",
															"src": "1829:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1738:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1791:5:1",
														"nodeType": "YulTypedName",
														"src": "1791:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1798:3:1",
														"nodeType": "YulTypedName",
														"src": "1798:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1803:10:1",
														"nodeType": "YulTypedName",
														"src": "1803:10:1",
														"type": ""
													}
												],
												"src": "1738:518:1"
											},
											{
												"body": {
													"nativeSrc": "2346:81:1",
													"nodeType": "YulBlock",
													"src": "2346:81:1",
													"statements": [
														{
															"nativeSrc": "2356:65:1",
															"nodeType": "YulAssignment",
															"src": "2356:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2371:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2371:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2389:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2389:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2392:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2392:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2385:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2385:3:1"
																								},
																								"nativeSrc": "2385:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2385:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2402:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2402:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2398:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2398:3:1"
																								},
																								"nativeSrc": "2398:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2398:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2381:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2381:3:1"
																						},
																						"nativeSrc": "2381:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2381:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2377:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2377:3:1"
																				},
																				"nativeSrc": "2377:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2367:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:1"
																		},
																		"nativeSrc": "2367:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2413:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2413:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2416:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2416:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2409:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:1"
																		},
																		"nativeSrc": "2409:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2364:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2364:2:1"
																},
																"nativeSrc": "2364:57:1",
																"nodeType": "YulFunctionCall",
																"src": "2364:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2356:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2356:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2261:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2323:4:1",
														"nodeType": "YulTypedName",
														"src": "2323:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2329:3:1",
														"nodeType": "YulTypedName",
														"src": "2329:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2337:4:1",
														"nodeType": "YulTypedName",
														"src": "2337:4:1",
														"type": ""
													}
												],
												"src": "2261:166:1"
											},
											{
												"body": {
													"nativeSrc": "2528:1203:1",
													"nodeType": "YulBlock",
													"src": "2528:1203:1",
													"statements": [
														{
															"nativeSrc": "2538:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2538:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2558:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2558:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2552:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2552:5:1"
																},
																"nativeSrc": "2552:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2552:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2542:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2542:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2605:22:1",
																"nodeType": "YulBlock",
																"src": "2605:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2607:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2607:16:1"
																			},
																			"nativeSrc": "2607:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2607:18:1"
																		},
																		"nativeSrc": "2607:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2607:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2577:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2577:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2593:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2593:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2597:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2597:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2589:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2589:3:1"
																				},
																				"nativeSrc": "2589:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2589:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2601:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2601:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2585:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2585:3:1"
																		},
																		"nativeSrc": "2585:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2585:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2574:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2574:2:1"
																},
																"nativeSrc": "2574:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2574:30:1"
															},
															"nativeSrc": "2571:56:1",
															"nodeType": "YulIf",
															"src": "2571:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2680:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2680:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2718:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2718:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2712:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2712:5:1"
																				},
																				"nativeSrc": "2712:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2686:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "2686:25:1"
																		},
																		"nativeSrc": "2686:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2686:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2726:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2636:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2636:43:1"
																},
																"nativeSrc": "2636:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2636:97:1"
															},
															"nativeSrc": "2636:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2636:97:1"
														},
														{
															"nativeSrc": "2742:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2742:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2759:1:1",
																"nodeType": "YulLiteral",
																"src": "2759:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2746:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2746:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2769:17:1",
															"nodeType": "YulAssignment",
															"src": "2769:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2782:4:1",
																"nodeType": "YulLiteral",
																"src": "2782:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2769:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2769:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2832:642:1",
																		"nodeType": "YulBlock",
																		"src": "2832:642:1",
																		"statements": [
																			{
																				"nativeSrc": "2846:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2846:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2865:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2865:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2877:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2877:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2873:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2873:3:1"
																							},
																							"nativeSrc": "2873:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2873:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2861:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:3:1"
																					},
																					"nativeSrc": "2861:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2861:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2850:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2850:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2894:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2894:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2938:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2938:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2908:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2908:29:1"
																					},
																					"nativeSrc": "2908:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2908:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2898:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2898:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2956:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2956:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2965:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2965:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2960:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2960:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3036:165:1",
																					"nodeType": "YulBlock",
																					"src": "3036:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3061:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3061:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3079:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3079:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3084:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "3084:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3075:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3075:3:1"
																												},
																												"nativeSrc": "3075:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3075:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3069:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "3069:5:1"
																										},
																										"nativeSrc": "3069:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3069:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3054:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3054:6:1"
																								},
																								"nativeSrc": "3054:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3054:42:1"
																							},
																							"nativeSrc": "3054:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3054:42:1"
																						},
																						{
																							"nativeSrc": "3113:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3113:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3127:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3127:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3135:1:1",
																										"nodeType": "YulLiteral",
																										"src": "3135:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3123:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3123:3:1"
																								},
																								"nativeSrc": "3123:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3123:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3113:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3113:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3154:33:1",
																							"nodeType": "YulAssignment",
																							"src": "3154:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3171:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "3171:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3182:4:1",
																										"nodeType": "YulLiteral",
																										"src": "3182:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3167:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3167:3:1"
																								},
																								"nativeSrc": "3167:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3167:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3154:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3154:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2990:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2990:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2993:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2993:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2987:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2987:2:1"
																					},
																					"nativeSrc": "2987:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2987:14:1"
																				},
																				"nativeSrc": "2979:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3002:21:1",
																					"nodeType": "YulBlock",
																					"src": "3002:21:1",
																					"statements": [
																						{
																							"nativeSrc": "3004:17:1",
																							"nodeType": "YulAssignment",
																							"src": "3004:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3013:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "3013:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3016:4:1",
																										"nodeType": "YulLiteral",
																										"src": "3016:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3009:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3009:3:1"
																								},
																								"nativeSrc": "3009:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3009:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3004:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "3004:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2983:3:1",
																					"nodeType": "YulBlock",
																					"src": "2983:3:1",
																					"statements": []
																				},
																				"src": "2979:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "3249:166:1",
																					"nodeType": "YulBlock",
																					"src": "3249:166:1",
																					"statements": [
																						{
																							"nativeSrc": "3267:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3267:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3294:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3294:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3299:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3299:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3290:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3290:3:1"
																										},
																										"nativeSrc": "3290:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3290:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3284:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3284:5:1"
																								},
																								"nativeSrc": "3284:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3284:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3271:9:1",
																									"nodeType": "YulTypedName",
																									"src": "3271:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3334:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3334:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3346:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3346:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3373:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "3373:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3376:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "3376:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3369:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "3369:3:1"
																																		},
																																		"nativeSrc": "3369:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3369:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3385:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3385:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3365:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3365:3:1"
																																},
																																"nativeSrc": "3365:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3365:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3395:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3395:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3391:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3391:3:1"
																																},
																																"nativeSrc": "3391:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3391:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3361:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "3361:3:1"
																														},
																														"nativeSrc": "3361:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "3361:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3357:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3357:3:1"
																												},
																												"nativeSrc": "3357:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3357:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3342:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3342:3:1"
																										},
																										"nativeSrc": "3342:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3342:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3327:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3327:6:1"
																								},
																								"nativeSrc": "3327:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3327:74:1"
																							},
																							"nativeSrc": "3327:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3327:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3220:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3220:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3229:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3229:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3217:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3217:2:1"
																					},
																					"nativeSrc": "3217:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3217:19:1"
																				},
																				"nativeSrc": "3214:201:1",
																				"nodeType": "YulIf",
																				"src": "3214:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3435:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3435:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3449:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3449:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3452:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3452:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3445:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3445:3:1"
																									},
																									"nativeSrc": "3445:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3445:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3461:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3461:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3441:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3441:3:1"
																							},
																							"nativeSrc": "3441:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3441:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3428:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3428:6:1"
																					},
																					"nativeSrc": "3428:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3428:36:1"
																				},
																				"nativeSrc": "3428:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3428:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2825:649:1",
																	"nodeType": "YulCase",
																	"src": "2825:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2830:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2830:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3491:234:1",
																		"nodeType": "YulBlock",
																		"src": "3491:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3505:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3505:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3518:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3509:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3509:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3554:67:1",
																					"nodeType": "YulBlock",
																					"src": "3554:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3572:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3572:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3591:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3591:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3596:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3596:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3587:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3587:3:1"
																										},
																										"nativeSrc": "3587:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3587:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3581:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3581:5:1"
																								},
																								"nativeSrc": "3581:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3581:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3572:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3572:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3535:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3535:6:1"
																				},
																				"nativeSrc": "3532:89:1",
																				"nodeType": "YulIf",
																				"src": "3532:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3641:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3641:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3700:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3700:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3707:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3707:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3647:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "3647:52:1"
																							},
																							"nativeSrc": "3647:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3647:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3634:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:1"
																					},
																					"nativeSrc": "3634:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3634:81:1"
																				},
																				"nativeSrc": "3634:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3634:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3483:242:1",
																	"nodeType": "YulCase",
																	"src": "3483:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2805:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2805:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2813:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2813:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2802:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2802:2:1"
																},
																"nativeSrc": "2802:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2802:14:1"
															},
															"nativeSrc": "2795:930:1",
															"nodeType": "YulSwitch",
															"src": "2795:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2432:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2513:4:1",
														"nodeType": "YulTypedName",
														"src": "2513:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2519:3:1",
														"nodeType": "YulTypedName",
														"src": "2519:3:1",
														"type": ""
													}
												],
												"src": "2432:1299:1"
											},
											{
												"body": {
													"nativeSrc": "3837:102:1",
													"nodeType": "YulBlock",
													"src": "3837:102:1",
													"statements": [
														{
															"nativeSrc": "3847:26:1",
															"nodeType": "YulAssignment",
															"src": "3847:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3859:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3859:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3870:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3870:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3855:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:1"
																},
																"nativeSrc": "3855:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3855:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3847:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3847:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3889:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3889:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3904:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3904:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3920:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3920:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3925:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3925:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3916:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3916:3:1"
																						},
																						"nativeSrc": "3916:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3916:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3929:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3929:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3912:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3912:3:1"
																				},
																				"nativeSrc": "3912:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3912:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3900:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3900:3:1"
																		},
																		"nativeSrc": "3900:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3900:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:1"
																},
																"nativeSrc": "3882:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3882:51:1"
															},
															"nativeSrc": "3882:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3882:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3736:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3806:9:1",
														"nodeType": "YulTypedName",
														"src": "3806:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3817:6:1",
														"nodeType": "YulTypedName",
														"src": "3817:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3828:4:1",
														"nodeType": "YulTypedName",
														"src": "3828:4:1",
														"type": ""
													}
												],
												"src": "3736:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_address_fromMemory(add(headStart, 192))\n        value7 := abi_decode_address_fromMemory(add(headStart, 224))\n        value8 := abi_decode_address_fromMemory(add(headStart, 256))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1027 CODESIZE SUB DUP1 PUSH2 0x1027 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3B SWAP2 PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x47455053 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x3 PUSH2 0x76 DUP4 DUP3 PUSH2 0x303 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x83 DUP3 DUP3 PUSH2 0x303 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC DUP2 PUSH2 0x15D JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 AND SWAP10 DUP12 AND SWAP10 SWAP1 SWAP10 OR SWAP1 SWAP9 SSTORE PUSH1 0x8 DUP1 SLOAD DUP10 AND SWAP8 DUP11 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE PUSH1 0x9 DUP1 SLOAD DUP9 AND SWAP6 DUP10 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0xA DUP1 SLOAD DUP8 AND SWAP4 DUP9 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0xB DUP1 SLOAD DUP7 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD DUP6 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EB DUP11 PUSH2 0x1AE JUMP JUMPDEST SWAP9 POP PUSH2 0x1F9 PUSH1 0x20 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP8 POP PUSH2 0x207 PUSH1 0x40 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP7 POP PUSH2 0x215 PUSH1 0x60 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP6 POP PUSH2 0x223 PUSH1 0x80 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP5 POP PUSH2 0x231 PUSH1 0xA0 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP4 POP PUSH2 0x23F PUSH1 0xC0 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP3 POP PUSH2 0x24D PUSH1 0xE0 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP2 POP PUSH2 0x25C PUSH2 0x100 DUP12 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x293 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2DC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E8 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x31C JUMPI PUSH2 0x31C PUSH2 0x26B JUMP JUMPDEST PUSH2 0x330 DUP2 PUSH2 0x32A DUP5 SLOAD PUSH2 0x27F JUMP JUMPDEST DUP5 PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x362 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x34B JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2FB JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x391 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x371 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3AE JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC5D DUP1 PUSH2 0x3CA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xBC71788B GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xBC71788B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xD3E1FE14 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF79ED94B EQ PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA5ECE941 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xAFCF2FC4 EQ PUSH2 0x29F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C75F085 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x1C75F085 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x3221C93F EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x4F02C420 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x122FE685 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x154 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x3F2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x17D SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0xB7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x384 SWAP1 PUSH2 0xB7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3E6 DUP2 DUP6 DUP6 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FA PUSH2 0x636 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x459 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206861766520616C7265616479206265656E206D696E74656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x48D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x108B2A2C28029094000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x4AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x4CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x4F0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x511 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x532 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x553 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x574 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x595 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER PUSH2 0x5A4 DUP6 DUP3 DUP6 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x5AF DUP6 DUP6 DUP6 PUSH2 0x716 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5C2 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x595 PUSH0 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3E6 DUP2 DUP6 DUP6 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x5EF PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x621 DUP2 PUSH2 0x7D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x827 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x697 PUSH0 DUP4 DUP4 PUSH2 0x8F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x710 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x710 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x827 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x73F JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x74F JUMPI PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0xA1F JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH2 0x75D PUSH1 0x2 DUP5 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x774 DUP3 DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x782 PUSH1 0x2 DUP5 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x78F DUP3 DUP6 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x7AA SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x7C2 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x7CD DUP8 DUP8 DUP6 PUSH2 0xA1F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x710 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8EB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x923 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x993 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA12 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xADD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAE6 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB06 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB0F DUP5 PUSH2 0xAB1 JUMP JUMPDEST SWAP3 POP PUSH2 0xB1D PUSH1 0x20 DUP6 ADD PUSH2 0xAB1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB47 DUP3 PUSH2 0xAB1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB68 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB76 PUSH1 0x20 DUP5 ADD PUSH2 0xAB1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB93 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBB1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3EC JUMPI PUSH2 0x3EC PUSH2 0xBB7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBFC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3EC JUMPI PUSH2 0x3EC PUSH2 0xBB7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3EC JUMPI PUSH2 0x3EC PUSH2 0xBB7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 SHL 0x4C ISZERO SSTORE JUMPDEST DUP2 0xF6 0x24 0x4E 0xC6 MSTORE8 JUMPI 0xCB 0x27 LOG4 0x4C 0xC2 0xD7 0xB5 CREATE PUSH8 0x7D83CE76B94C6656 SWAP13 ADD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "15045:2962:0:-:0;;;15568:26;;;-1:-1:-1;;;;15568:26:0;;;15603:768;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7928:116;;;;;;;;;;;;-1:-1:-1;;;7928:116:0;;;;;;;;;;;;;;;;;;;;;;15960:10;;7995:5;:13;7928:116;7995:5;:13;:::i;:::-;-1:-1:-1;8019:7:0;:17;8029:7;8019;:17;:::i;:::-;-1:-1:-1;;;;;;;;13635:26:0;;13631:97;;13685:31;;-1:-1:-1;;;13685:31:0;;13713:1;13685:31;;;3882:51:1;3855:18;;13685:31:0;;;;;;;13631:97;13738:32;13757:12;13738:18;:32::i;:::-;-1:-1:-1;15983:14:0::2;:32:::0;;-1:-1:-1;;;;;;15983:32:0;;::::2;-1:-1:-1::0;;;;;15983:32:0;;::::2;;::::0;;;16026:10:::2;:24:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;16061:16:::2;:36:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;16108:15:::2;:34:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;16153:11:::2;:26:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;16190:18:::2;:40:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;16241:16:::2;:36:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;16288:14:::2;:32:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;16331:14:::2;:32:::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;15045:2962;;14847:191;14940:6;;;-1:-1:-1;;;;;14957:17:0;;;-1:-1:-1;;;;;;14957:17:0;;;;;;;14990:40;;14940:6;;;14957:17;14940:6;;14990:40;;14921:16;;14990:40;14910:128;14847:191;:::o;14:177:1:-;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:894::-;338:6;346;354;362;370;378;386;394;402;455:3;443:9;434:7;430:23;426:33;423:53;;;472:1;469;462:12;423:53;495:40;525:9;495:40;:::i;:::-;485:50;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:49;735:2;724:9;720:18;690:49;:::i;:::-;680:59;;758:50;803:3;792:9;788:19;758:50;:::i;:::-;748:60;;827:50;872:3;861:9;857:19;827:50;:::i;:::-;817:60;;896:50;941:3;930:9;926:19;896:50;:::i;:::-;886:60;;965:50;1010:3;999:9;995:19;965:50;:::i;:::-;955:60;;1034:50;1079:3;1068:9;1064:19;1034:50;:::i;:::-;1024:60;;196:894;;;;;;;;;;;:::o;1095:127::-;1156:10;1151:3;1147:20;1144:1;1137:31;1187:4;1184:1;1177:15;1211:4;1208:1;1201:15;1227:380;1306:1;1302:12;;;;1349;;;1370:61;;1424:4;1416:6;1412:17;1402:27;;1370:61;1477:2;1469:6;1466:14;1446:18;1443:38;1440:161;;1523:10;1518:3;1514:20;1511:1;1504:31;1558:4;1555:1;1548:15;1586:4;1583:1;1576:15;1440:161;;1227:380;;;:::o;1738:518::-;1840:2;1835:3;1832:11;1829:421;;;1876:5;1873:1;1866:16;1920:4;1917:1;1907:18;1990:2;1978:10;1974:19;1971:1;1967:27;1961:4;1957:38;2026:4;2014:10;2011:20;2008:47;;;-1:-1:-1;2049:4:1;2008:47;2104:2;2099:3;2095:12;2092:1;2088:20;2082:4;2078:31;2068:41;;2159:81;2177:2;2170:5;2167:13;2159:81;;;2236:1;2222:16;;2203:1;2192:13;2159:81;;;2163:3;;1829:421;1738:518;;;:::o;2432:1299::-;2552:10;;-1:-1:-1;;;;;2574:30:1;;2571:56;;;2607:18;;:::i;:::-;2636:97;2726:6;2686:38;2718:4;2712:11;2686:38;:::i;:::-;2680:4;2636:97;:::i;:::-;2782:4;2813:2;2802:14;;2830:1;2825:649;;;;3518:1;3535:6;3532:89;;;-1:-1:-1;3587:19:1;;;3581:26;3532:89;-1:-1:-1;;2389:1:1;2385:11;;;2381:24;2377:29;2367:40;2413:1;2409:11;;;2364:57;3634:81;;2795:930;;2825:649;1685:1;1678:14;;;1722:4;1709:18;;-1:-1:-1;;2861:20:1;;;2979:222;2993:7;2990:1;2987:14;2979:222;;;3075:19;;;3069:26;3054:42;;3182:4;3167:20;;;;3135:1;3123:14;;;;3009:12;2979:222;;;2983:3;3229:6;3220:7;3217:19;3214:201;;;3290:19;;;3284:26;-1:-1:-1;;3373:1:1;3369:14;;;3385:3;3365:24;3361:37;3357:42;3342:58;3327:74;;3214:201;-1:-1:-1;;;;3461:1:1;3445:14;;;3441:22;3428:36;;-1:-1:-1;2432:1299:1:o;3736:203::-;15045:2962:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_637": {
									"entryPoint": 1572,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_696": {
									"entryPoint": 2087,
									"id": 696,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_824": {
									"entryPoint": 1590,
									"id": 824,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_588": {
									"entryPoint": 1635,
									"id": 588,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_743": {
									"entryPoint": 1691,
									"id": 743,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_884": {
									"entryPoint": 2006,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1165": {
									"entryPoint": 1814,
									"id": 1165,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_480": {
									"entryPoint": 2591,
									"id": 480,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_556": {
									"entryPoint": 2297,
									"id": 556,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_380": {
									"entryPoint": null,
									"id": 380,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_403": {
									"entryPoint": 985,
									"id": 403,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@charityAddress_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_318": {
									"entryPoint": null,
									"id": 318,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidityAddress_913": {
									"entryPoint": null,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingAddress_905": {
									"entryPoint": null,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1083": {
									"entryPoint": 1010,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minted_920": {
									"entryPoint": null,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_301": {
									"entryPoint": 841,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@partnershipAddress_911": {
									"entryPoint": null,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleAddress_901": {
									"entryPoint": null,
									"id": 901,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_837": {
									"entryPoint": 1466,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveAddress_917": {
									"entryPoint": null,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rndAddress_903": {
									"entryPoint": null,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_310": {
									"entryPoint": 1483,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@teamAddress_909": {
									"entryPoint": null,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_434": {
									"entryPoint": 1431,
									"id": 434,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_864": {
									"entryPoint": 1511,
									"id": 864,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_363": {
									"entryPoint": 1498,
									"id": 363,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasuryAddress_907": {
									"entryPoint": null,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3ceecdea78d8277dc86c0051f97cf02df0d80dcdd29c80f23c038ae03af32a32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4408:1",
										"nodeType": "YulBlock",
										"src": "0:4408:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:102:1",
													"nodeType": "YulBlock",
													"src": "1213:102:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1280:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1296:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1296:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1301:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1301:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1292:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1292:3:1"
																						},
																						"nativeSrc": "1292:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1292:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1305:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1305:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1288:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1288:3:1"
																				},
																				"nativeSrc": "1288:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1288:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1276:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:1"
																		},
																		"nativeSrc": "1276:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:51:1"
															},
															"nativeSrc": "1258:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1112:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:203:1"
											},
											{
												"body": {
													"nativeSrc": "1421:76:1",
													"nodeType": "YulBlock",
													"src": "1421:76:1",
													"statements": [
														{
															"nativeSrc": "1431:26:1",
															"nodeType": "YulAssignment",
															"src": "1431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1439:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:1"
																},
																"nativeSrc": "1439:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1431:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1473:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1484:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:25:1"
															},
															"nativeSrc": "1466:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1320:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:1",
														"nodeType": "YulTypedName",
														"src": "1390:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1401:6:1",
														"nodeType": "YulTypedName",
														"src": "1401:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1412:4:1",
														"nodeType": "YulTypedName",
														"src": "1412:4:1",
														"type": ""
													}
												],
												"src": "1320:177:1"
											},
											{
												"body": {
													"nativeSrc": "1606:270:1",
													"nodeType": "YulBlock",
													"src": "1606:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1652:16:1",
																"nodeType": "YulBlock",
																"src": "1652:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:1"
																			},
																			"nativeSrc": "1654:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:1"
																		},
																		"nativeSrc": "1654:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1627:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:1"
																},
																"nativeSrc": "1619:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1619:32:1"
															},
															"nativeSrc": "1616:52:1",
															"nodeType": "YulIf",
															"src": "1616:52:1"
														},
														{
															"nativeSrc": "1677:39:1",
															"nodeType": "YulAssignment",
															"src": "1677:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1706:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1687:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:1"
																},
																"nativeSrc": "1687:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1687:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:1"
																}
															]
														},
														{
															"nativeSrc": "1725:48:1",
															"nodeType": "YulAssignment",
															"src": "1725:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:1"
																		},
																		"nativeSrc": "1754:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1735:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:1"
																},
																"nativeSrc": "1735:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1735:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1725:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:1"
																}
															]
														},
														{
															"nativeSrc": "1782:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1795:1:1",
																"nodeType": "YulLiteral",
																"src": "1795:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1786:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1805:41:1",
															"nodeType": "YulAssignment",
															"src": "1805:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1842:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nativeSrc": "1827:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1814:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:1"
																},
																"nativeSrc": "1814:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1805:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:1"
																}
															]
														},
														{
															"nativeSrc": "1855:15:1",
															"nodeType": "YulAssignment",
															"src": "1855:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1865:5:1",
																"nodeType": "YulIdentifier",
																"src": "1865:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1855:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1502:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:1",
														"nodeType": "YulTypedName",
														"src": "1556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:1",
														"nodeType": "YulTypedName",
														"src": "1567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:1",
														"nodeType": "YulTypedName",
														"src": "1579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:1",
														"nodeType": "YulTypedName",
														"src": "1587:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1595:6:1",
														"nodeType": "YulTypedName",
														"src": "1595:6:1",
														"type": ""
													}
												],
												"src": "1502:374:1"
											},
											{
												"body": {
													"nativeSrc": "1978:87:1",
													"nodeType": "YulBlock",
													"src": "1978:87:1",
													"statements": [
														{
															"nativeSrc": "1988:26:1",
															"nodeType": "YulAssignment",
															"src": "1988:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2000:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1996:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:1"
																},
																"nativeSrc": "1996:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1996:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1988:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2030:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2045:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2045:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2053:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2053:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2041:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:1"
																		},
																		"nativeSrc": "2041:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2023:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:1"
																},
																"nativeSrc": "2023:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2023:36:1"
															},
															"nativeSrc": "2023:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2023:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1881:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1947:9:1",
														"nodeType": "YulTypedName",
														"src": "1947:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1958:6:1",
														"nodeType": "YulTypedName",
														"src": "1958:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1969:4:1",
														"nodeType": "YulTypedName",
														"src": "1969:4:1",
														"type": ""
													}
												],
												"src": "1881:184:1"
											},
											{
												"body": {
													"nativeSrc": "2140:116:1",
													"nodeType": "YulBlock",
													"src": "2140:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:1",
																"nodeType": "YulBlock",
																"src": "2186:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:1"
																			},
																			"nativeSrc": "2188:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:1"
																		},
																		"nativeSrc": "2188:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:1"
																		},
																		"nativeSrc": "2157:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:1"
																},
																"nativeSrc": "2153:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:1"
															},
															"nativeSrc": "2150:52:1",
															"nodeType": "YulIf",
															"src": "2150:52:1"
														},
														{
															"nativeSrc": "2211:39:1",
															"nodeType": "YulAssignment",
															"src": "2211:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:1"
																},
																"nativeSrc": "2221:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2070:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2106:9:1",
														"nodeType": "YulTypedName",
														"src": "2106:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2117:7:1",
														"nodeType": "YulTypedName",
														"src": "2117:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2129:6:1",
														"nodeType": "YulTypedName",
														"src": "2129:6:1",
														"type": ""
													}
												],
												"src": "2070:186:1"
											},
											{
												"body": {
													"nativeSrc": "2348:173:1",
													"nodeType": "YulBlock",
													"src": "2348:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2394:16:1",
																"nodeType": "YulBlock",
																"src": "2394:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2396:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:1"
																			},
																			"nativeSrc": "2396:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:12:1"
																		},
																		"nativeSrc": "2396:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2369:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2369:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nativeSrc": "2365:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2390:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2361:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:1"
																},
																"nativeSrc": "2361:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2361:32:1"
															},
															"nativeSrc": "2358:52:1",
															"nodeType": "YulIf",
															"src": "2358:52:1"
														},
														{
															"nativeSrc": "2419:39:1",
															"nodeType": "YulAssignment",
															"src": "2419:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2429:18:1"
																},
																"nativeSrc": "2429:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2429:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:1"
																}
															]
														},
														{
															"nativeSrc": "2467:48:1",
															"nodeType": "YulAssignment",
															"src": "2467:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:1"
																		},
																		"nativeSrc": "2496:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2477:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2477:18:1"
																},
																"nativeSrc": "2477:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2477:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2467:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2261:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2306:9:1",
														"nodeType": "YulTypedName",
														"src": "2306:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2317:7:1",
														"nodeType": "YulTypedName",
														"src": "2317:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2329:6:1",
														"nodeType": "YulTypedName",
														"src": "2329:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2337:6:1",
														"nodeType": "YulTypedName",
														"src": "2337:6:1",
														"type": ""
													}
												],
												"src": "2261:260:1"
											},
											{
												"body": {
													"nativeSrc": "2581:325:1",
													"nodeType": "YulBlock",
													"src": "2581:325:1",
													"statements": [
														{
															"nativeSrc": "2591:22:1",
															"nodeType": "YulAssignment",
															"src": "2591:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2605:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2608:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2608:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2601:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:1"
																},
																"nativeSrc": "2601:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2591:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:1"
																}
															]
														},
														{
															"nativeSrc": "2622:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2622:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2652:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2652:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2658:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:1"
																},
																"nativeSrc": "2648:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2648:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2626:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2626:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2699:31:1",
																"nodeType": "YulBlock",
																"src": "2699:31:1",
																"statements": [
																	{
																		"nativeSrc": "2701:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2701:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2715:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2715:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2723:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2723:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2711:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:1"
																			},
																			"nativeSrc": "2711:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2711:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2679:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2679:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:1"
																},
																"nativeSrc": "2672:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2672:26:1"
															},
															"nativeSrc": "2669:61:1",
															"nodeType": "YulIf",
															"src": "2669:61:1"
														},
														{
															"body": {
																"nativeSrc": "2789:111:1",
																"nodeType": "YulBlock",
																"src": "2789:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:1"
																					},
																					"nativeSrc": "2813:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:1"
																			},
																			"nativeSrc": "2803:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:1"
																		},
																		"nativeSrc": "2803:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:1"
																			},
																			"nativeSrc": "2847:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:1"
																		},
																		"nativeSrc": "2847:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:1"
																			},
																			"nativeSrc": "2875:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:1"
																		},
																		"nativeSrc": "2875:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2745:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2745:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2765:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2765:2:1"
																		},
																		"nativeSrc": "2765:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2742:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:1"
																},
																"nativeSrc": "2742:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2742:38:1"
															},
															"nativeSrc": "2739:161:1",
															"nodeType": "YulIf",
															"src": "2739:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2526:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2561:4:1",
														"nodeType": "YulTypedName",
														"src": "2561:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2570:6:1",
														"nodeType": "YulTypedName",
														"src": "2570:6:1",
														"type": ""
													}
												],
												"src": "2526:380:1"
											},
											{
												"body": {
													"nativeSrc": "3085:181:1",
													"nodeType": "YulBlock",
													"src": "3085:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3102:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3102:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3113:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3113:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:1"
																},
																"nativeSrc": "3095:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3095:21:1"
															},
															"nativeSrc": "3095:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3095:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3136:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3136:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3147:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3147:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3132:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:1"
																		},
																		"nativeSrc": "3132:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3132:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3152:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3152:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3125:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:1"
																},
																"nativeSrc": "3125:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3125:30:1"
															},
															"nativeSrc": "3125:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3125:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3175:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3186:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:1"
																		},
																		"nativeSrc": "3171:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:1"
																	},
																	{
																		"hexValue": "546f6b656e73206861766520616c7265616479206265656e206d696e746564",
																		"kind": "string",
																		"nativeSrc": "3191:33:1",
																		"nodeType": "YulLiteral",
																		"src": "3191:33:1",
																		"type": "",
																		"value": "Tokens have already been minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3164:6:1"
																},
																"nativeSrc": "3164:61:1",
																"nodeType": "YulFunctionCall",
																"src": "3164:61:1"
															},
															"nativeSrc": "3164:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "3164:61:1"
														},
														{
															"nativeSrc": "3234:26:1",
															"nodeType": "YulAssignment",
															"src": "3234:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3246:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3246:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3242:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:1"
																},
																"nativeSrc": "3242:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3242:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3234:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3234:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3ceecdea78d8277dc86c0051f97cf02df0d80dcdd29c80f23c038ae03af32a32__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2911:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3062:9:1",
														"nodeType": "YulTypedName",
														"src": "3062:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3076:4:1",
														"nodeType": "YulTypedName",
														"src": "3076:4:1",
														"type": ""
													}
												],
												"src": "2911:355:1"
											},
											{
												"body": {
													"nativeSrc": "3428:188:1",
													"nodeType": "YulBlock",
													"src": "3428:188:1",
													"statements": [
														{
															"nativeSrc": "3438:26:1",
															"nodeType": "YulAssignment",
															"src": "3438:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3450:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3450:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3461:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3446:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3446:3:1"
																},
																"nativeSrc": "3446:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3446:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3438:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3438:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3480:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3480:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3495:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3511:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3511:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3516:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3516:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3507:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3507:3:1"
																						},
																						"nativeSrc": "3507:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3507:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3520:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3520:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3503:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3503:3:1"
																				},
																				"nativeSrc": "3503:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3503:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3491:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3491:3:1"
																		},
																		"nativeSrc": "3491:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:1"
																},
																"nativeSrc": "3473:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3473:51:1"
															},
															"nativeSrc": "3473:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3473:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3544:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3555:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3555:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3540:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3540:3:1"
																		},
																		"nativeSrc": "3540:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3540:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3560:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3560:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3533:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:1"
																},
																"nativeSrc": "3533:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3533:34:1"
															},
															"nativeSrc": "3533:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3533:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3587:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3587:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3598:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3598:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3583:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3583:3:1"
																		},
																		"nativeSrc": "3583:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3583:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3603:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3603:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3576:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3576:6:1"
																},
																"nativeSrc": "3576:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3576:34:1"
															},
															"nativeSrc": "3576:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3576:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3271:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3381:9:1",
														"nodeType": "YulTypedName",
														"src": "3381:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3392:6:1",
														"nodeType": "YulTypedName",
														"src": "3392:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3400:6:1",
														"nodeType": "YulTypedName",
														"src": "3400:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3408:6:1",
														"nodeType": "YulTypedName",
														"src": "3408:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3419:4:1",
														"nodeType": "YulTypedName",
														"src": "3419:4:1",
														"type": ""
													}
												],
												"src": "3271:345:1"
											},
											{
												"body": {
													"nativeSrc": "3653:95:1",
													"nodeType": "YulBlock",
													"src": "3653:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3670:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3670:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3677:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3677:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3682:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3673:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:1"
																		},
																		"nativeSrc": "3673:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3673:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3663:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3663:6:1"
																},
																"nativeSrc": "3663:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3663:31:1"
															},
															"nativeSrc": "3663:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3663:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3710:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3710:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3713:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3713:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3703:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3703:6:1"
																},
																"nativeSrc": "3703:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3703:15:1"
															},
															"nativeSrc": "3703:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3703:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3734:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3734:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3737:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3737:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3727:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3727:6:1"
																},
																"nativeSrc": "3727:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3727:15:1"
															},
															"nativeSrc": "3727:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3727:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3621:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3621:127:1"
											},
											{
												"body": {
													"nativeSrc": "3805:116:1",
													"nodeType": "YulBlock",
													"src": "3805:116:1",
													"statements": [
														{
															"nativeSrc": "3815:20:1",
															"nodeType": "YulAssignment",
															"src": "3815:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3830:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3830:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3833:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3833:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:1"
																},
																"nativeSrc": "3826:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3826:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3815:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3815:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3893:22:1",
																"nodeType": "YulBlock",
																"src": "3893:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3895:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3895:16:1"
																			},
																			"nativeSrc": "3895:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3895:18:1"
																		},
																		"nativeSrc": "3895:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3895:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3864:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3864:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3857:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3857:6:1"
																				},
																				"nativeSrc": "3857:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3857:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3871:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3871:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3878:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "3878:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3887:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "3887:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3874:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3874:3:1"
																						},
																						"nativeSrc": "3874:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3874:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3868:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3868:2:1"
																				},
																				"nativeSrc": "3868:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3868:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3854:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3854:2:1"
																		},
																		"nativeSrc": "3854:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3854:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3847:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3847:6:1"
																},
																"nativeSrc": "3847:45:1",
																"nodeType": "YulFunctionCall",
																"src": "3847:45:1"
															},
															"nativeSrc": "3844:71:1",
															"nodeType": "YulIf",
															"src": "3844:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3753:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3784:1:1",
														"nodeType": "YulTypedName",
														"src": "3784:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3787:1:1",
														"nodeType": "YulTypedName",
														"src": "3787:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3793:7:1",
														"nodeType": "YulTypedName",
														"src": "3793:7:1",
														"type": ""
													}
												],
												"src": "3753:168:1"
											},
											{
												"body": {
													"nativeSrc": "3972:171:1",
													"nodeType": "YulBlock",
													"src": "3972:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4003:111:1",
																"nodeType": "YulBlock",
																"src": "4003:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4024:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4024:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4031:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4031:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4036:10:1",
																							"nodeType": "YulLiteral",
																							"src": "4036:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4027:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4027:3:1"
																					},
																					"nativeSrc": "4027:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4027:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4017:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:6:1"
																			},
																			"nativeSrc": "4017:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:31:1"
																		},
																		"nativeSrc": "4017:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4068:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4068:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4071:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4071:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4061:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4061:6:1"
																			},
																			"nativeSrc": "4061:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4061:15:1"
																		},
																		"nativeSrc": "4061:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4061:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4096:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4096:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4099:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4099:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4089:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4089:6:1"
																			},
																			"nativeSrc": "4089:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4089:15:1"
																		},
																		"nativeSrc": "4089:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4089:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3992:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3992:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3985:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3985:6:1"
																},
																"nativeSrc": "3985:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3985:9:1"
															},
															"nativeSrc": "3982:132:1",
															"nodeType": "YulIf",
															"src": "3982:132:1"
														},
														{
															"nativeSrc": "4123:14:1",
															"nodeType": "YulAssignment",
															"src": "4123:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4132:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4132:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4135:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4135:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4128:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:1"
																},
																"nativeSrc": "4128:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4128:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4123:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4123:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3926:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3957:1:1",
														"nodeType": "YulTypedName",
														"src": "3957:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3960:1:1",
														"nodeType": "YulTypedName",
														"src": "3960:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3966:1:1",
														"nodeType": "YulTypedName",
														"src": "3966:1:1",
														"type": ""
													}
												],
												"src": "3926:217:1"
											},
											{
												"body": {
													"nativeSrc": "4197:79:1",
													"nodeType": "YulBlock",
													"src": "4197:79:1",
													"statements": [
														{
															"nativeSrc": "4207:17:1",
															"nodeType": "YulAssignment",
															"src": "4207:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4219:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4219:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4222:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4222:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4215:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4215:3:1"
																},
																"nativeSrc": "4215:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4215:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4207:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4207:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4248:22:1",
																"nodeType": "YulBlock",
																"src": "4248:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4250:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4250:16:1"
																			},
																			"nativeSrc": "4250:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4250:18:1"
																		},
																		"nativeSrc": "4250:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4250:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4239:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4239:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4245:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4245:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4236:2:1"
																},
																"nativeSrc": "4236:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4236:11:1"
															},
															"nativeSrc": "4233:37:1",
															"nodeType": "YulIf",
															"src": "4233:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4148:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4179:1:1",
														"nodeType": "YulTypedName",
														"src": "4179:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4182:1:1",
														"nodeType": "YulTypedName",
														"src": "4182:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4188:4:1",
														"nodeType": "YulTypedName",
														"src": "4188:4:1",
														"type": ""
													}
												],
												"src": "4148:128:1"
											},
											{
												"body": {
													"nativeSrc": "4329:77:1",
													"nodeType": "YulBlock",
													"src": "4329:77:1",
													"statements": [
														{
															"nativeSrc": "4339:16:1",
															"nodeType": "YulAssignment",
															"src": "4339:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4350:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4350:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4353:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4353:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4346:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:1"
																},
																"nativeSrc": "4346:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4346:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4339:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4378:22:1",
																"nodeType": "YulBlock",
																"src": "4378:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4380:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4380:16:1"
																			},
																			"nativeSrc": "4380:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4380:18:1"
																		},
																		"nativeSrc": "4380:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4380:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4370:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4373:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4373:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4367:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4367:2:1"
																},
																"nativeSrc": "4367:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4367:10:1"
															},
															"nativeSrc": "4364:36:1",
															"nodeType": "YulIf",
															"src": "4364:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4281:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4312:1:1",
														"nodeType": "YulTypedName",
														"src": "4312:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4315:1:1",
														"nodeType": "YulTypedName",
														"src": "4315:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4321:3:1",
														"nodeType": "YulTypedName",
														"src": "4321:3:1",
														"type": ""
													}
												],
												"src": "4281:125:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_3ceecdea78d8277dc86c0051f97cf02df0d80dcdd29c80f23c038ae03af32a32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Tokens have already been minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610148575f3560e01c8063715018a6116100bf578063bc71788b11610079578063bc71788b146102b2578063c5f956af146102c5578063d3e1fe14146102d8578063dd62ed3e146102eb578063f2fde38b14610323578063f79ed94b14610336575f80fd5b8063715018a6146102585780638da5cb5b1461026057806395d89b4114610271578063a5ece94114610279578063a9059cbb1461028c578063afcf2fc41461029f575f80fd5b80631c75f085116101105780631c75f085146101d457806323b872dd146101e7578063313ce567146101fa5780633221c93f146102095780634f02c4201461021c57806370a0823114610230575f80fd5b806306fdde031461014c578063095ea7b31461016a578063122fe6851461018d5780631249c58b146101b857806318160ddd146101c2575b5f80fd5b610154610349565b6040516101619190610a7c565b60405180910390f35b61017d610178366004610acc565b6103d9565b6040519015158152602001610161565b6006546101a0906001600160a01b031681565b6040516001600160a01b039091168152602001610161565b6101c06103f2565b005b6002545b604051908152602001610161565b600a546101a0906001600160a01b031681565b61017d6101f5366004610af4565b610597565b60405160128152602001610161565b600c546101a0906001600160a01b031681565b600e5461017d90600160a01b900460ff1681565b6101c661023e366004610b2e565b6001600160a01b03165f9081526020819052604090205490565b6101c06105ba565b6005546001600160a01b03166101a0565b6101546105cb565b6008546101a0906001600160a01b031681565b61017d61029a366004610acc565b6105da565b600d546101a0906001600160a01b031681565b6007546101a0906001600160a01b031681565b6009546101a0906001600160a01b031681565b600b546101a0906001600160a01b031681565b6101c66102f9366004610b4e565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101c0610331366004610b2e565b6105e7565b600e546101a0906001600160a01b031681565b60606003805461035890610b7f565b80601f016020809104026020016040519081016040528092919081815260200182805461038490610b7f565b80156103cf5780601f106103a6576101008083540402835291602001916103cf565b820191905f5260205f20905b8154815290600101906020018083116103b257829003601f168201915b5050505050905090565b5f336103e6818585610624565b60019150505b92915050565b6103fa610636565b600e54600160a01b900460ff16156104595760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e73206861766520616c7265616479206265656e206d696e7465640060448201526064015b60405180910390fd5b600e805460ff60a01b1916600160a01b17905560065461048d906001600160a01b03166a108b2a2c28029094000000610663565b6007546104ae906001600160a01b03166a0211654585005212800000610663565b6008546104cf906001600160a01b03166a0211654585005212800000610663565b6009546104f0906001600160a01b03166a0422ca8b0a00a425000000610663565b600a54610511906001600160a01b03166a0422ca8b0a00a425000000610663565b600b54610532906001600160a01b03166a0211654585005212800000610663565b600c54610553906001600160a01b03166a0422ca8b0a00a425000000610663565b600d54610574906001600160a01b03166a0211654585005212800000610663565b600e54610595906001600160a01b03166a0422ca8b0a00a425000000610663565b565b5f336105a485828561069b565b6105af858585610716565b506001949350505050565b6105c2610636565b6105955f6107d6565b60606004805461035890610b7f565b5f336103e6818585610716565b6105ef610636565b6001600160a01b03811661061857604051631e4fbdf760e01b81525f6004820152602401610450565b610621816107d6565b50565b6106318383836001610827565b505050565b6005546001600160a01b031633146105955760405163118cdaa760e01b8152336004820152602401610450565b6001600160a01b03821661068c5760405163ec442f0560e01b81525f6004820152602401610450565b6106975f83836108f9565b5050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610710578181101561070257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610450565b61071084848484035f610827565b50505050565b6005546001600160a01b038481169116148061073f57506005546001600160a01b038381169116145b1561074f57610631838383610a1f565b5f606461075d600284610bcb565b6107679190610be2565b90505f6107748284610c01565b90505f610782600284610be2565b90505f61078f8285610c01565b6009549091506107aa9088906001600160a01b031684610a1f565b600d546107c29088906001600160a01b031683610a1f565b6107cd878785610a1f565b50505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166108505760405163e602df0560e01b81525f6004820152602401610450565b6001600160a01b03831661087957604051634a1406b160e11b81525f6004820152602401610450565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561071057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108eb91815260200190565b60405180910390a350505050565b6001600160a01b038316610923578060025f8282546109189190610c14565b909155506109939050565b6001600160a01b0383165f90815260208190526040902054818110156109755760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610450565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166109af576002805482900390556109cd565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a1291815260200190565b60405180910390a3505050565b6001600160a01b038316610a4857604051634b637e8f60e11b81525f6004820152602401610450565b6001600160a01b038216610a715760405163ec442f0560e01b81525f6004820152602401610450565b6106318383836108f9565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610ac7575f80fd5b919050565b5f8060408385031215610add575f80fd5b610ae683610ab1565b946020939093013593505050565b5f805f60608486031215610b06575f80fd5b610b0f84610ab1565b9250610b1d60208501610ab1565b929592945050506040919091013590565b5f60208284031215610b3e575f80fd5b610b4782610ab1565b9392505050565b5f8060408385031215610b5f575f80fd5b610b6883610ab1565b9150610b7660208401610ab1565b90509250929050565b600181811c90821680610b9357607f821691505b602082108103610bb157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176103ec576103ec610bb7565b5f82610bfc57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156103ec576103ec610bb7565b808201808211156103ec576103ec610bb756fea2646970667358221220b91b4c15555b81f6244ec65357cb27a44cc2d7b5f0677d83ce76b94c66569c0164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x148 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xBC71788B GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xBC71788B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xD3E1FE14 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xF79ED94B EQ PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA5ECE941 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xAFCF2FC4 EQ PUSH2 0x29F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C75F085 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x1C75F085 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x3221C93F EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x4F02C420 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x122FE685 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x154 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x3F2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x161 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x17D SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1A0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0xB7F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x384 SWAP1 PUSH2 0xB7F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3E6 DUP2 DUP6 DUP6 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FA PUSH2 0x636 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x459 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206861766520616C7265616479206265656E206D696E74656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x48D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x108B2A2C28029094000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x4AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x4CF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x4F0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x511 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x532 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x553 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x574 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x211654585005212800000 PUSH2 0x663 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x595 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH11 0x422CA8B0A00A425000000 PUSH2 0x663 JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER PUSH2 0x5A4 DUP6 DUP3 DUP6 PUSH2 0x69B JUMP JUMPDEST PUSH2 0x5AF DUP6 DUP6 DUP6 PUSH2 0x716 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5C2 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x595 PUSH0 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3E6 DUP2 DUP6 DUP6 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x5EF PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x621 DUP2 PUSH2 0x7D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x827 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x697 PUSH0 DUP4 DUP4 PUSH2 0x8F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x710 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x710 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x827 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x73F JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x74F JUMPI PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0xA1F JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH2 0x75D PUSH1 0x2 DUP5 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x767 SWAP2 SWAP1 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x774 DUP3 DUP5 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x782 PUSH1 0x2 DUP5 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x78F DUP3 DUP6 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x7AA SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x7C2 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x7CD DUP8 DUP8 DUP6 PUSH2 0xA1F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x710 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8EB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x923 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x993 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA12 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x450 JUMP JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xADD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAE6 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB06 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB0F DUP5 PUSH2 0xAB1 JUMP JUMPDEST SWAP3 POP PUSH2 0xB1D PUSH1 0x20 DUP6 ADD PUSH2 0xAB1 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB47 DUP3 PUSH2 0xAB1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB68 DUP4 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 POP PUSH2 0xB76 PUSH1 0x20 DUP5 ADD PUSH2 0xAB1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB93 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBB1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3EC JUMPI PUSH2 0x3EC PUSH2 0xBB7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBFC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3EC JUMPI PUSH2 0x3EC PUSH2 0xBB7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3EC JUMPI PUSH2 0x3EC PUSH2 0xBB7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 SHL 0x4C ISZERO SSTORE JUMPDEST DUP2 0xF6 0x24 0x4E 0xC6 MSTORE8 JUMPI 0xCB 0x27 LOG4 0x4C 0xC2 0xD7 0xB5 CREATE PUSH8 0x7D83CE76B94C6656 SWAP13 ADD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "15045:2962:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8114:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9284:215;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;9284:215:0;920:187:1;15242:29:0;;;;;-1:-1:-1;;;;;15242:29:0;;;;;;-1:-1:-1;;;;;1276:32:1;;;1258:51;;1246:2;1231:18;15242:29:0;1112:203:1;16379:659:0;;;:::i;:::-;;8576:99;8655:12;;8576:99;;;1466:25:1;;;1454:2;1439:18;8576:99:0;1320:177:1;15385:26:0;;;;;-1:-1:-1;;;;;15385:26:0;;;9507:283;;;;;;:::i;:::-;;:::i;8427:84::-;;;8501:2;2023:36:1;;2011:2;1996:18;8427:84:0;1881:184:1;15458:31:0;;;;;-1:-1:-1;;;;;15458:31:0;;;15568:26;;;;;-1:-1:-1;;;15568:26:0;;;;;;8738:118;;;;;;:::i;:::-;-1:-1:-1;;;;;8830:18:0;8803:7;8830:18;;;;;;;;;;;;8738:118;14356:103;;;:::i;14017:87::-;14090:6;;-1:-1:-1;;;;;14090:6:0;14017:87;;8324:95;;;:::i;15310:31::-;;;;;-1:-1:-1;;;;;15310:31:0;;;8864:182;;;;;;:::i;:::-;;:::i;15496:29::-;;;;;-1:-1:-1;;;;;15496:29:0;;;15278:25;;;;;-1:-1:-1;;;;;15278:25:0;;;15348:30;;;;;-1:-1:-1;;;;;15348:30:0;;;15418:33;;;;;-1:-1:-1;;;;;15418:33:0;;;9109:167;;;;;;:::i;:::-;-1:-1:-1;;;;;9241:18:0;;;9214:7;9241:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;9109:167;14467:220;;;;;;:::i;:::-;;:::i;15532:29::-;;;;;-1:-1:-1;;;;;15532:29:0;;;8114:91;8159:13;8192:5;8185:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8114:91;:::o;9284:215::-;9382:4;2551:10;9438:31;2551:10;9454:7;9463:5;9438:8;:31::i;:::-;9487:4;9480:11;;;9284:215;;;;;:::o;16379:659::-;13903:13;:11;:13::i;:::-;16434:6:::1;::::0;-1:-1:-1;;;16434:6:0;::::1;;;16433:7;16425:51;;;::::0;-1:-1:-1;;;16425:51:0;;3113:2:1;16425:51:0::1;::::0;::::1;3095:21:1::0;3152:2;3132:18;;;3125:30;3191:33;3171:18;;;3164:61;3242:18;;16425:51:0::1;;;;;;;;;16487:6;:13:::0;;-1:-1:-1;;;;16487:13:0::1;-1:-1:-1::0;;;16487:13:0::1;::::0;;16517:14:::1;::::0;16511:42:::1;::::0;-1:-1:-1;;;;;16517:14:0::1;16533:19;16511:5;:42::i;:::-;16577:10;::::0;16571:37:::1;::::0;-1:-1:-1;;;;;16577:10:0::1;16589:18;16571:5;:37::i;:::-;16631:16;::::0;16625:43:::1;::::0;-1:-1:-1;;;;;16631:16:0::1;16649:18;16625:5;:43::i;:::-;16691:15;::::0;16685:42:::1;::::0;-1:-1:-1;;;;;16691:15:0::1;16708:18;16685:5;:42::i;:::-;16751:11;::::0;16745:38:::1;::::0;-1:-1:-1;;;;;16751:11:0::1;16764:18;16745:5;:38::i;:::-;16807:18;::::0;16801:45:::1;::::0;-1:-1:-1;;;;;16807:18:0::1;16827;16801:5;:45::i;:::-;16869:16;::::0;16863:43:::1;::::0;-1:-1:-1;;;;;16869:16:0::1;16887:18;16863:5;:43::i;:::-;16930:14;::::0;16924:41:::1;::::0;-1:-1:-1;;;;;16930:14:0::1;16946:18;16924:5;:41::i;:::-;16988:14;::::0;16982:41:::1;::::0;-1:-1:-1;;;;;16988:14:0::1;17004:18;16982:5;:41::i;:::-;16379:659::o:0;9507:283::-;9628:4;2551:10;9686:37;9702:4;2551:10;9717:5;9686:15;:37::i;:::-;9734:26;9744:4;9750:2;9754:5;9734:9;:26::i;:::-;-1:-1:-1;9778:4:0;;9507:283;-1:-1:-1;;;;9507:283:0:o;14356:103::-;13903:13;:11;:13::i;:::-;14421:30:::1;14448:1;14421:18;:30::i;8324:95::-:0;8371:13;8404:7;8397:14;;;;;:::i;8864:182::-;8933:4;2551:10;8989:27;2551:10;9006:2;9010:5;8989:9;:27::i;14467:220::-;13903:13;:11;:13::i;:::-;-1:-1:-1;;;;;14552:22:0;::::1;14548:93;;14598:31;::::0;-1:-1:-1;;;14598:31:0;;14626:1:::1;14598:31;::::0;::::1;1258:51:1::0;1231:18;;14598:31:0::1;1112:203:1::0;14548:93:0::1;14651:28;14670:8;14651:18;:28::i;:::-;14467:220:::0;:::o;11739:130::-;11824:37;11833:5;11840:7;11849:5;11856:4;11824:8;:37::i;:::-;11739:130;;;:::o;14182:166::-;14090:6;;-1:-1:-1;;;;;14090:6:0;2551:10;14242:23;14238:103;;14289:40;;-1:-1:-1;;;14289:40:0;;2551:10;14289:40;;;1258:51:1;1231:18;;14289:40:0;1112:203:1;11299:213:0;-1:-1:-1;;;;;11370:21:0;;11366:93;;11415:32;;-1:-1:-1;;;11415:32:0;;11444:1;11415:32;;;1258:51:1;1231:18;;11415:32:0;1112:203:1;11366:93:0;11469:35;11485:1;11489:7;11498:5;11469:7;:35::i;:::-;11299:213;;:::o;12371:603::-;-1:-1:-1;;;;;9241:18:0;;;12505:24;9241:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;12572:37:0;;12568:399;;12649:5;12630:16;:24;12626:214;;;12682:142;;-1:-1:-1;;;12682:142:0;;-1:-1:-1;;;;;3491:32:1;;12682:142:0;;;3473:51:1;3540:18;;;3533:34;;;3583:18;;;3576:34;;;3446:18;;12682:142:0;3271:345:1;12626:214:0;12883:57;12892:5;12899:7;12927:5;12908:16;:24;12934:5;12883:8;:57::i;:::-;12494:480;12371:603;;;:::o;17046:956::-;14090:6;;-1:-1:-1;;;;;17191:17:0;;;14090:6;;17191:17;;:41;;-1:-1:-1;14090:6:0;;-1:-1:-1;;;;;17212:20:0;;;14090:6;;17212:20;17191:41;17187:808;;;17327:42;17343:6;17351:9;17362:6;17327:15;:42::i;17187:808::-;17443:17;17488:3;17464:20;15232:1;17464:6;:20;:::i;:::-;17463:28;;;;:::i;:::-;17443:48;-1:-1:-1;17506:22:0;17531:18;17443:48;17531:6;:18;:::i;:::-;17506:43;-1:-1:-1;17622:15:0;17640:13;17652:1;17640:9;:13;:::i;:::-;17622:31;-1:-1:-1;17668:20:0;17691:19;17622:31;17691:9;:19;:::i;:::-;17825:15;;17668:42;;-1:-1:-1;17801:49:0;;17817:6;;-1:-1:-1;;;;;17825:15:0;17842:7;17801:15;:49::i;:::-;17889:14;;17865:53;;17881:6;;-1:-1:-1;;;;;17889:14:0;17905:12;17865:15;:53::i;:::-;17933:50;17949:6;17957:9;17968:14;17933:15;:50::i;:::-;17387:608;;;;17046:956;;;:::o;14847:191::-;14940:6;;;-1:-1:-1;;;;;14957:17:0;;;-1:-1:-1;;;;;;14957:17:0;;;;;;;14990:40;;14940:6;;;14957:17;14940:6;;14990:40;;14921:16;;14990:40;14910:128;14847:191;:::o;11877:486::-;-1:-1:-1;;;;;12033:19:0;;12029:91;;12076:32;;-1:-1:-1;;;12076:32:0;;12105:1;12076:32;;;1258:51:1;1231:18;;12076:32:0;1112:203:1;12029:91:0;-1:-1:-1;;;;;12134:21:0;;12130:92;;12179:31;;-1:-1:-1;;;12179:31:0;;12207:1;12179:31;;;1258:51:1;1231:18;;12179:31:0;1112:203:1;12130:92:0;-1:-1:-1;;;;;12232:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;12278:78;;;;12329:7;-1:-1:-1;;;;;12313:31:0;12322:5;-1:-1:-1;;;;;12313:31:0;;12338:5;12313:31;;;;1466:25:1;;1454:2;1439:18;;1320:177;12313:31:0;;;;;;;;11877:486;;;;:::o;10156:1135::-;-1:-1:-1;;;;;10246:18:0;;10242:552;;10400:5;10384:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;10242:552:0;;-1:-1:-1;10242:552:0;;-1:-1:-1;;;;;10460:15:0;;10438:19;10460:15;;;;;;;;;;;10494:19;;;10490:117;;;10541:50;;-1:-1:-1;;;10541:50:0;;-1:-1:-1;;;;;3491:32:1;;10541:50:0;;;3473:51:1;3540:18;;;3533:34;;;3583:18;;;3576:34;;;3446:18;;10541:50:0;3271:345:1;10490:117:0;-1:-1:-1;;;;;10730:15:0;;:9;:15;;;;;;;;;;10748:19;;;;10730:37;;10242:552;-1:-1:-1;;;;;10810:16:0;;10806:435;;10976:12;:21;;;;;;;10806:435;;;-1:-1:-1;;;;;11192:13:0;;:9;:13;;;;;;;;;;:22;;;;;;10806:435;11273:2;-1:-1:-1;;;;;11258:25:0;11267:4;-1:-1:-1;;;;;11258:25:0;;11277:5;11258:25;;;;1466::1;;1454:2;1439:18;;1320:177;11258:25:0;;;;;;;;10156:1135;;;:::o;9798:350::-;-1:-1:-1;;;;;9924:18:0;;9920:88;;9966:30;;-1:-1:-1;;;9966:30:0;;9993:1;9966:30;;;1258:51:1;1231:18;;9966:30:0;1112:203:1;9920:88:0;-1:-1:-1;;;;;10022:16:0;;10018:88;;10062:32;;-1:-1:-1;;;10062:32:0;;10091:1;10062:32;;;1258:51:1;1231:18;;10062:32:0;1112:203:1;10018:88:0;10116:24;10124:4;10130:2;10134:5;10116:7;:24::i;14:418:1:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1502:374::-;1579:6;1587;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;;1735:38;1769:2;1758:9;1754:18;1735:38;:::i;:::-;1502:374;;1725:48;;-1:-1:-1;;;1842:2:1;1827:18;;;;1814:32;;1502:374::o;2070:186::-;2129:6;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;2070:186;-1:-1:-1;;;2070:186:1:o;2261:260::-;2329:6;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2429:29;2448:9;2429:29;:::i;:::-;2419:39;;2477:38;2511:2;2500:9;2496:18;2477:38;:::i;:::-;2467:48;;2261:260;;;;;:::o;2526:380::-;2605:1;2601:12;;;;2648;;;2669:61;;2723:4;2715:6;2711:17;2701:27;;2669:61;2776:2;2768:6;2765:14;2745:18;2742:38;2739:161;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15;2739:161;;2526:380;;;:::o;3621:127::-;3682:10;3677:3;3673:20;3670:1;3663:31;3713:4;3710:1;3703:15;3737:4;3734:1;3727:15;3753:168;3826:9;;;3857;;3874:15;;;3868:22;;3854:37;3844:71;;3895:18;;:::i;3926:217::-;3966:1;3992;3982:132;;4036:10;4031:3;4027:20;4024:1;4017:31;4071:4;4068:1;4061:15;4099:4;4096:1;4089:15;3982:132;-1:-1:-1;4128:9:1;;3926:217::o;4148:128::-;4215:9;;;4236:11;;;4233:37;;;4250:18;;:::i;4281:125::-;4346:9;;;4367:10;;;4364:36;;;4380:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "633000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2670",
								"charityAddress()": "2469",
								"decimals()": "243",
								"liquidityAddress()": "2425",
								"marketingAddress()": "2425",
								"mint()": "infinite",
								"minted()": "2437",
								"name()": "infinite",
								"owner()": "2375",
								"partnershipAddress()": "2402",
								"presaleAddress()": "2404",
								"renounceOwnership()": "infinite",
								"reserveAddress()": "2468",
								"rndAddress()": "2358",
								"symbol()": "infinite",
								"teamAddress()": "2359",
								"totalSupply()": "2392",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"treasuryAddress()": "2380"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15045,
									"end": 18007,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15594,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 15568,
									"end": 15594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15594,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 15568,
									"end": 15594,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15594,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 15603,
									"end": 16371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 15603,
									"end": 16371,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "47455053"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15960,
									"end": 15970,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 15960,
									"end": 15970,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8000,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7995,
									"end": 8008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7928,
									"end": 8044,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8000,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7995,
									"end": 8008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8008,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7995,
									"end": 8008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8019,
									"end": 8026,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8019,
									"end": 8036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8029,
									"end": 8036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8019,
									"end": 8026,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8019,
									"end": 8036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8019,
									"end": 8036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8019,
									"end": 8036,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8019,
									"end": 8036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13635,
									"end": 13661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13635,
									"end": 13661,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13631,
									"end": 13728,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13631,
									"end": 13728,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13713,
									"end": 13714,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3882,
									"end": 3933,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3855,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3855,
									"end": 3873,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13685,
									"end": 13716,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13631,
									"end": 13728,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13631,
									"end": 13728,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13738,
									"end": 13770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 13757,
									"end": 13769,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13738,
									"end": 13756,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 13738,
									"end": 13770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13738,
									"end": 13770,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 13738,
									"end": 13770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15983,
									"end": 15997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "SWAP12",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "DUP13",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15983,
									"end": 16015,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16036,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SWAP10",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SWAP9",
									"source": 0
								},
								{
									"begin": 16026,
									"end": 16050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16077,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 16061,
									"end": 16097,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16123,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 16108,
									"end": 16142,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16164,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16153,
									"end": 16179,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16208,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16190,
									"end": 16230,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16257,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16241,
									"end": 16277,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16302,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16288,
									"end": 16320,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16345,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16331,
									"end": 16363,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14847,
									"end": 15038,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 14847,
									"end": 15038,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14990,
									"end": 15030,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14990,
									"end": 15030,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14957,
									"end": 14974,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14940,
									"end": 14946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14990,
									"end": 15030,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 14990,
									"end": 15030,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14921,
									"end": 14937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14921,
									"end": 14937,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14990,
									"end": 15030,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 14910,
									"end": 15038,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14847,
									"end": 15038,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14847,
									"end": 15038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 338,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 352,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 354,
									"end": 360,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 370,
									"end": 376,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 384,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 386,
									"end": 392,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 394,
									"end": 400,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 402,
									"end": 408,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 455,
									"end": 458,
									"name": "PUSH",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 443,
									"end": 452,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 434,
									"end": 441,
									"name": "DUP13",
									"source": 1
								},
								{
									"begin": 430,
									"end": 453,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 426,
									"end": 459,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 423,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 423,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 423,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 472,
									"end": 473,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 469,
									"end": 470,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 462,
									"end": 474,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 423,
									"end": 476,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 423,
									"end": 476,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 495,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 525,
									"end": 534,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 495,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 495,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 495,
									"end": 535,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 495,
									"end": 535,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 485,
									"end": 535,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 485,
									"end": 535,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 690,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 690,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 690,
									"end": 739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 690,
									"end": 739,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 690,
									"end": 739,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 680,
									"end": 739,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 680,
									"end": 739,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 758,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 803,
									"end": 806,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 792,
									"end": 801,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 788,
									"end": 807,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 758,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 758,
									"end": 808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 758,
									"end": 808,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 758,
									"end": 808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 748,
									"end": 808,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 748,
									"end": 808,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 827,
									"end": 877,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 872,
									"end": 875,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 861,
									"end": 870,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 857,
									"end": 876,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 827,
									"end": 877,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 827,
									"end": 877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 827,
									"end": 877,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 877,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 817,
									"end": 877,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 817,
									"end": 877,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 896,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 930,
									"end": 939,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 926,
									"end": 945,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 896,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 896,
									"end": 946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 896,
									"end": 946,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 896,
									"end": 946,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 886,
									"end": 946,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 886,
									"end": 946,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 965,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1010,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 999,
									"end": 1008,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1014,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 965,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 965,
									"end": 1015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 965,
									"end": 1015,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 965,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 955,
									"end": 1015,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 955,
									"end": 1015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1079,
									"end": 1082,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1068,
									"end": 1077,
									"name": "DUP12",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1034,
									"end": 1084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1034,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1024,
									"end": 1084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1024,
									"end": 1084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 196,
									"end": 1090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1095,
									"end": 1222,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1095,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1166,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1151,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1147,
									"end": 1167,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1145,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1168,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1187,
									"end": 1191,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1177,
									"end": 1192,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1215,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1208,
									"end": 1209,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1201,
									"end": 1216,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1607,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1227,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1302,
									"end": 1314,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 1314,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 1314,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1302,
									"end": 1314,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1361,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1361,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1361,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1370,
									"end": 1431,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1370,
									"end": 1431,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1424,
									"end": 1428,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1416,
									"end": 1422,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1429,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1370,
									"end": 1431,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1370,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1479,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1466,
									"end": 1480,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1481,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1440,
									"end": 1601,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1523,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1518,
									"end": 1521,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1514,
									"end": 1534,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1512,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1504,
									"end": 1535,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1555,
									"end": 1556,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1576,
									"end": 1591,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1601,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1440,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1607,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1607,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1607,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 2256,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1738,
									"end": 2256,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1840,
									"end": 1842,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1832,
									"end": 1843,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1829,
									"end": 2250,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1829,
									"end": 2250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1829,
									"end": 2250,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1876,
									"end": 1881,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1873,
									"end": 1874,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1866,
									"end": 1882,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1924,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1917,
									"end": 1918,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1925,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1990,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1978,
									"end": 1988,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1974,
									"end": 1993,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1972,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1967,
									"end": 1994,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1961,
									"end": 1965,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 1995,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2026,
									"end": 2030,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2014,
									"end": 2024,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2031,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2055,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2008,
									"end": 2055,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2049,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2055,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2008,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2106,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2099,
									"end": 2102,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2095,
									"end": 2107,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2092,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2088,
									"end": 2108,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2082,
									"end": 2086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2078,
									"end": 2109,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2068,
									"end": 2109,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2068,
									"end": 2109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2177,
									"end": 2179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2170,
									"end": 2175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2167,
									"end": 2180,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2222,
									"end": 2238,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2222,
									"end": 2238,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2204,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2192,
									"end": 2205,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2159,
									"end": 2240,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1829,
									"end": 2250,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1829,
									"end": 2250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 2256,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 2256,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 2256,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1738,
									"end": 2256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2432,
									"end": 3731,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2432,
									"end": 3731,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2562,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2562,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2574,
									"end": 2604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2574,
									"end": 2604,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2627,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2571,
									"end": 2627,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2607,
									"end": 2625,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2607,
									"end": 2625,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2607,
									"end": 2625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2607,
									"end": 2625,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2607,
									"end": 2625,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2733,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2726,
									"end": 2732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2686,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2718,
									"end": 2722,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2712,
									"end": 2723,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2686,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2686,
									"end": 2724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2686,
									"end": 2724,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2686,
									"end": 2724,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2680,
									"end": 2684,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2733,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2636,
									"end": 2733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2733,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2636,
									"end": 2733,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2782,
									"end": 2786,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2813,
									"end": 2815,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2802,
									"end": 2816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2816,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2831,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2825,
									"end": 3474,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2825,
									"end": 3474,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2825,
									"end": 3474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2825,
									"end": 3474,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3518,
									"end": 3519,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3535,
									"end": 3541,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3532,
									"end": 3621,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3532,
									"end": 3621,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3532,
									"end": 3621,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3587,
									"end": 3606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3606,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3606,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3581,
									"end": 3607,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3532,
									"end": 3621,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3532,
									"end": 3621,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2389,
									"end": 2390,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2385,
									"end": 2396,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2385,
									"end": 2396,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2385,
									"end": 2396,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2381,
									"end": 2405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2406,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2414,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2409,
									"end": 2420,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2409,
									"end": 2420,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2409,
									"end": 2420,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2421,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3634,
									"end": 3715,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3634,
									"end": 3715,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2795,
									"end": 3725,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2795,
									"end": 3725,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2825,
									"end": 3474,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2825,
									"end": 3474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1678,
									"end": 1692,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1709,
									"end": 1727,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1709,
									"end": 1727,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2861,
									"end": 2881,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2861,
									"end": 2881,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2861,
									"end": 2881,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2993,
									"end": 3000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2990,
									"end": 2991,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2987,
									"end": 3001,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3075,
									"end": 3094,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3075,
									"end": 3094,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3075,
									"end": 3094,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3069,
									"end": 3095,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3054,
									"end": 3096,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3054,
									"end": 3096,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3186,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3167,
									"end": 3187,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3167,
									"end": 3187,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3167,
									"end": 3187,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3167,
									"end": 3187,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3135,
									"end": 3136,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3123,
									"end": 3137,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3123,
									"end": 3137,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3123,
									"end": 3137,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3123,
									"end": 3137,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3009,
									"end": 3021,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2979,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 2986,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3235,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3220,
									"end": 3227,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3236,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3214,
									"end": 3415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3309,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3309,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3309,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3284,
									"end": 3310,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3373,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3385,
									"end": 3388,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3365,
									"end": 3389,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3398,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3357,
									"end": 3399,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3342,
									"end": 3400,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3327,
									"end": 3401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3327,
									"end": 3401,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3214,
									"end": 3415,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3214,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3461,
									"end": 3462,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3445,
									"end": 3459,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3445,
									"end": 3459,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3445,
									"end": 3459,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3441,
									"end": 3463,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3428,
									"end": 3464,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3428,
									"end": 3464,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2432,
									"end": 3731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3736,
									"end": 3939,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3736,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15045,
									"end": 18007,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b91b4c15555b81f6244ec65357cb27a44cc2d7b5f0677d83ce76b94c66569c0164736f6c634300081a0033",
									".code": [
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "BC71788B"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "BC71788B"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "C5F956AF"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "D3E1FE14"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "F79ED94B"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "A5ECE941"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "AFCF2FC4"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "1C75F085"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "1C75F085"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "3221C93F"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "4F02C420"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "122FE685"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "1249C58B"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 18007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8114,
											"end": 8205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8114,
											"end": 8205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9284,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9284,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15242,
											"end": 15271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16379,
											"end": 17038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8675,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8576,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8667,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8655,
											"end": 8667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8675,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8576,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8576,
											"end": 8675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15385,
											"end": 15411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9507,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9507,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8511,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8427,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8427,
											"end": 8511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1881,
											"end": 2065,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15594,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8738,
											"end": 8856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8856,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14459,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14356,
											"end": 14459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14356,
											"end": 14459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14356,
											"end": 14459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14017,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14017,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14017,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14017,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8419,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8324,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8324,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8324,
											"end": 8419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15310,
											"end": 15341,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8864,
											"end": 9046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8864,
											"end": 9046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15496,
											"end": 15525,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15278,
											"end": 15303,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15418,
											"end": 15451,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9109,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14467,
											"end": 14687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14467,
											"end": 14687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15532,
											"end": 15561,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8159,
											"end": 8172,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8192,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8185,
											"end": 8197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8185,
											"end": 8197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9454,
											"end": 9461,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9463,
											"end": 9468,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9438,
											"end": 9469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9438,
											"end": 9469,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9438,
											"end": 9469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9480,
											"end": 9491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16379,
											"end": 17038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13903,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 13903,
											"end": 13916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 16434,
											"end": 16440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16434,
											"end": 16440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16440,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16434,
											"end": 16440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16433,
											"end": 16440,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16425,
											"end": 16476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16425,
											"end": 16476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16425,
											"end": 16476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E73206861766520616C7265616479206265656E206D696E74656400"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16425,
											"end": 16476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 16487,
											"end": 16500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16487,
											"end": 16500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16487,
											"end": 16500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16517,
											"end": 16531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16511,
											"end": 16553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16517,
											"end": 16531,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16533,
											"end": 16552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "108B2A2C28029094000000"
										},
										{
											"begin": 16511,
											"end": 16516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16511,
											"end": 16553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16511,
											"end": 16553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16511,
											"end": 16553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16577,
											"end": 16587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16577,
											"end": 16587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16571,
											"end": 16608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16571,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16577,
											"end": 16587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16589,
											"end": 16607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "211654585005212800000"
										},
										{
											"begin": 16571,
											"end": 16576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16571,
											"end": 16608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16571,
											"end": 16608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16571,
											"end": 16608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16631,
											"end": 16647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16631,
											"end": 16647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16625,
											"end": 16668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16631,
											"end": 16647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16649,
											"end": 16667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "211654585005212800000"
										},
										{
											"begin": 16625,
											"end": 16630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16625,
											"end": 16668,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16625,
											"end": 16668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16691,
											"end": 16706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16691,
											"end": 16706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16685,
											"end": 16727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16685,
											"end": 16727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16691,
											"end": 16706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16708,
											"end": 16726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "422CA8B0A00A425000000"
										},
										{
											"begin": 16685,
											"end": 16690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16685,
											"end": 16727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16685,
											"end": 16727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16685,
											"end": 16727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16751,
											"end": 16762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 16751,
											"end": 16762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16745,
											"end": 16783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16751,
											"end": 16762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "422CA8B0A00A425000000"
										},
										{
											"begin": 16745,
											"end": 16750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16745,
											"end": 16783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16745,
											"end": 16783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16745,
											"end": 16783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 16807,
											"end": 16825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16801,
											"end": 16846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16801,
											"end": 16846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16807,
											"end": 16825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16827,
											"end": 16845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "211654585005212800000"
										},
										{
											"begin": 16801,
											"end": 16806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16801,
											"end": 16846,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16801,
											"end": 16846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16801,
											"end": 16846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 16885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 16869,
											"end": 16885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16863,
											"end": 16906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16863,
											"end": 16906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16869,
											"end": 16885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16887,
											"end": 16905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "422CA8B0A00A425000000"
										},
										{
											"begin": 16863,
											"end": 16868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16863,
											"end": 16906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16863,
											"end": 16906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16863,
											"end": 16906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16930,
											"end": 16944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 16930,
											"end": 16944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16924,
											"end": 16965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16924,
											"end": 16965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16930,
											"end": 16944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16946,
											"end": 16964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "211654585005212800000"
										},
										{
											"begin": 16924,
											"end": 16929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16924,
											"end": 16965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16924,
											"end": 16965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16924,
											"end": 16965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16988,
											"end": 17002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 16988,
											"end": 17002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16982,
											"end": 17023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16982,
											"end": 17023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16988,
											"end": 17002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 17022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "422CA8B0A00A425000000"
										},
										{
											"begin": 16982,
											"end": 16987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16982,
											"end": 17023,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16982,
											"end": 17023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16982,
											"end": 17023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16379,
											"end": 17038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9628,
											"end": 9632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9686,
											"end": 9723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9686,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9734,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 9744,
											"end": 9748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9734,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 9734,
											"end": 9760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9734,
											"end": 9760,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 9734,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9778,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9778,
											"end": 9782,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9507,
											"end": 9790,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9507,
											"end": 9790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14459,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14356,
											"end": 14459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13903,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 13903,
											"end": 13916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14448,
											"end": 14449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14421,
											"end": 14439,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 14421,
											"end": 14451,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8419,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8324,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8371,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8404,
											"end": 8411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8397,
											"end": 8411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 8397,
											"end": 8411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8397,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 8397,
											"end": 8411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8864,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9010,
											"end": 9015,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8989,
											"end": 9016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13903,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 13903,
											"end": 13916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13903,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14552,
											"end": 14574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14548,
											"end": 14641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14548,
											"end": 14641,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14598,
											"end": 14629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14598,
											"end": 14629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14598,
											"end": 14629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14598,
											"end": 14629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14626,
											"end": 14627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14598,
											"end": 14629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14598,
											"end": 14629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14598,
											"end": 14629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14598,
											"end": 14629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14548,
											"end": 14641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14548,
											"end": 14641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14670,
											"end": 14678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 14651,
											"end": 14679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14651,
											"end": 14679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14467,
											"end": 14687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11869,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11739,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11824,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11833,
											"end": 11838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11840,
											"end": 11847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11849,
											"end": 11854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11856,
											"end": 11860,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11824,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11824,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11824,
											"end": 11861,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11824,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11739,
											"end": 11869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14182,
											"end": 14348,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14182,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14242,
											"end": 14265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14238,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 14238,
											"end": 14341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11299,
											"end": 11512,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11299,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11370,
											"end": 11391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11370,
											"end": 11391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11366,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11366,
											"end": 11459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 11445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11415,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11366,
											"end": 11459,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11366,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11485,
											"end": 11486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11498,
											"end": 11503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11469,
											"end": 11504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11504,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11469,
											"end": 11504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11299,
											"end": 11512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11299,
											"end": 11512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11299,
											"end": 11512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12371,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12505,
											"end": 12529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12572,
											"end": 12609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12568,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12568,
											"end": 12967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12649,
											"end": 12654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12626,
											"end": 12840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12626,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12626,
											"end": 12840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3491,
											"end": 3523,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12682,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3271,
											"end": 3616,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12626,
											"end": 12840,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12626,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12883,
											"end": 12940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12892,
											"end": 12897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12899,
											"end": 12906,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 12932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12924,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 12939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12883,
											"end": 12940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12883,
											"end": 12940,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12883,
											"end": 12940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12494,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 18002,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 17046,
											"end": 18002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17191,
											"end": 17208,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17191,
											"end": 17232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17212,
											"end": 17232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17212,
											"end": 17232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17212,
											"end": 17232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17212,
											"end": 17232,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17191,
											"end": 17232,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17191,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17187,
											"end": 17995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 17343,
											"end": 17349,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17351,
											"end": 17360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17362,
											"end": 17368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17327,
											"end": 17342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17327,
											"end": 17369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17995,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17187,
											"end": 17995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17488,
											"end": 17491,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17464,
											"end": 17484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 15232,
											"end": 15233,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17464,
											"end": 17470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 17464,
											"end": 17484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17484,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17464,
											"end": 17484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17463,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 17463,
											"end": 17491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17463,
											"end": 17491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17463,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 17463,
											"end": 17491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17463,
											"end": 17491,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 17463,
											"end": 17491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17443,
											"end": 17491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17506,
											"end": 17528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17531,
											"end": 17549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 17443,
											"end": 17491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17531,
											"end": 17537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17531,
											"end": 17549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 17531,
											"end": 17549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17531,
											"end": 17549,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 17531,
											"end": 17549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17622,
											"end": 17637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17640,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 17652,
											"end": 17653,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17640,
											"end": 17649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17640,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 17640,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17640,
											"end": 17653,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 17640,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17668,
											"end": 17688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17691,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17622,
											"end": 17653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17700,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 17691,
											"end": 17710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17691,
											"end": 17710,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17691,
											"end": 17710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17825,
											"end": 17840,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17825,
											"end": 17840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17668,
											"end": 17710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17668,
											"end": 17710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17801,
											"end": 17850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 17801,
											"end": 17850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17817,
											"end": 17823,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17817,
											"end": 17823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17825,
											"end": 17840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17842,
											"end": 17849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17801,
											"end": 17850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17850,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 17801,
											"end": 17850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17903,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 17889,
											"end": 17903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17865,
											"end": 17918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17865,
											"end": 17918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17881,
											"end": 17887,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 17881,
											"end": 17887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17889,
											"end": 17903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17865,
											"end": 17880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17865,
											"end": 17918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17865,
											"end": 17918,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17865,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17949,
											"end": 17955,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17957,
											"end": 17966,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17968,
											"end": 17982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17933,
											"end": 17983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17983,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17933,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 18002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 18002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 18002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17046,
											"end": 18002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14847,
											"end": 15038,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 14847,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14990,
											"end": 15030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15030,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 14990,
											"end": 15030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14921,
											"end": 14937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15030,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14910,
											"end": 15038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14847,
											"end": 15038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14847,
											"end": 15038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 12363,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11877,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12033,
											"end": 12052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12033,
											"end": 12052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 12029,
											"end": 12120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12120,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 12029,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12130,
											"end": 12222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 12130,
											"end": 12222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12207,
											"end": 12208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12130,
											"end": 12222,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 12130,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12243,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12278,
											"end": 12356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12278,
											"end": 12356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12278,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12278,
											"end": 12356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12322,
											"end": 12327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12338,
											"end": 12343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12344,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 12363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 12363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 12363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 12363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11877,
											"end": 12363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 11291,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 10156,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10246,
											"end": 10264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10246,
											"end": 10264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10400,
											"end": 10405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10384,
											"end": 10396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 10384,
											"end": 10405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10405,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10438,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10494,
											"end": 10513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10494,
											"end": 10513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10494,
											"end": 10513,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10490,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 10490,
											"end": 10607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3491,
											"end": 3523,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3271,
											"end": 3616,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10607,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 10490,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10745,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10748,
											"end": 10767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10748,
											"end": 10767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10748,
											"end": 10767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10748,
											"end": 10767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10767,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 10242,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10810,
											"end": 10826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10976,
											"end": 10997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 10997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 10997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 10997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 10997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 10997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 10997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11192,
											"end": 11214,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 10806,
											"end": 11241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11277,
											"end": 11282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11283,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 11291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 11291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 11291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 11291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 10148,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 9798,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9920,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9920,
											"end": 10008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 9994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 10008,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9920,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10018,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 10018,
											"end": 10106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10062,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1112,
											"end": 1315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10106,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 10018,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10124,
											"end": 10128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10130,
											"end": 10132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 10116,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 1735,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2256,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2393,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2429,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2477,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3621,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3692,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3677,
											"end": 3680,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3673,
											"end": 3693,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3717,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3703,
											"end": 3718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3734,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3742,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3921,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3753,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3835,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3891,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3844,
											"end": 3915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3895,
											"end": 3913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4143,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3926,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 3993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3982,
											"end": 4114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4031,
											"end": 4034,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4027,
											"end": 4047,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4061,
											"end": 4076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4096,
											"end": 4097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4114,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3982,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4276,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4148,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4233,
											"end": 4270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4250,
											"end": 4268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4406,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4281,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4400,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4364,
											"end": 4400,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4380,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4380,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/GepsToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"charityAddress()": "afcf2fc4",
							"decimals()": "313ce567",
							"liquidityAddress()": "3221c93f",
							"marketingAddress()": "a5ece941",
							"mint()": "1249c58b",
							"minted()": "4f02c420",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"partnershipAddress()": "d3e1fe14",
							"presaleAddress()": "122fe685",
							"renounceOwnership()": "715018a6",
							"reserveAddress()": "f79ed94b",
							"rndAddress()": "bc71788b",
							"symbol()": "95d89b41",
							"teamAddress()": "1c75f085",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasuryAddress()": "c5f956af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_presaleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rndAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_teamAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_partnershipAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_charityAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserveAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partnershipAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rndAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"GEPSToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 263,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 269,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 271,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 273,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 275,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 748,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 901,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "presaleAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 903,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "rndAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 905,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "marketingAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 907,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "treasuryAddress",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 909,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "teamAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 911,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "partnershipAddress",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 913,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "liquidityAddress",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 915,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "charityAddress",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 917,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "reserveAddress",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 920,
								"contract": "contracts/GepsToken.sol:GEPSToken",
								"label": "minted",
								"offset": 20,
								"slot": "14",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GepsToken.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GepsToken.sol\":{\"keccak256\":\"0x4158f45504f68c6fa5d6375d2bd8749b45feec95142861505d3b57c32e2fd303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a433f15c6e1da3df578f39f3d177a37a86677604bc788dffcd5b11eb57fcc3ea\",\"dweb:/ipfs/QmWFp1qUuCixN3DcNk8PPWYPJbXJ6DhALAj8PnXk4FpqPU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 748,
								"contract": "contracts/GepsToken.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/GepsToken.sol": {
				"ast": {
					"absolutePath": "contracts/GepsToken.sol",
					"exportedSymbols": {
						"Context": [
							123
						],
						"ERC20": [
							744
						],
						"GEPSToken": [
							1166
						],
						"IERC1155Errors": [
							251
						],
						"IERC20": [
							75
						],
						"IERC20Errors": [
							160
						],
						"IERC20Metadata": [
							96
						],
						"IERC721Errors": [
							206
						],
						"Ownable": [
							885
						]
					},
					"id": 1167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "168:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "196:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 75,
							"linearizedBaseContracts": [
								75
							],
							"name": "IERC20",
							"nameLocation": "280:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "294:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "469:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "494:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "478:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "516:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "500:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "528:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "520:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:57:0"
									},
									"src": "463:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "543:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "706:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "741:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "725:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "757:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:97:0"
									},
									"src": "700:112:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "820:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "902:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "939:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:0"
									},
									"scope": 75,
									"src": "893:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "956:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1044:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1062:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1054:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1094:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:0"
									},
									"scope": 75,
									"src": "1035:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1111:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1345:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1362:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1354:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1374:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1366:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1399:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:6:0"
									},
									"scope": 75,
									"src": "1336:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1413:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1698:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1726:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1718:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1750:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1742:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:57:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1788:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:9:0"
									},
									"scope": 75,
									"src": "1689:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1814:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1839:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:32:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1872:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:6:0"
									},
									"scope": 75,
									"src": "1805:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1895:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1918:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1949:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1941:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1970:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1962:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:75:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2001:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 71,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:6:0"
									},
									"scope": 75,
									"src": "1886:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1167,
							"src": "270:1740:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 76,
										"name": "IERC20",
										"nameLocations": [
											"2042:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 75,
										"src": "2042:6:0"
									},
									"id": 77,
									"nodeType": "InheritanceSpecifier",
									"src": "2042:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 96,
							"linearizedBaseContracts": [
								96,
								75
							],
							"name": "IERC20Metadata",
							"nameLocation": "2024:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2056:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2127:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2157:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 80,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:0"
									},
									"scope": 96,
									"src": "2118:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2180:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2253:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2259:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2285:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:15:0"
									},
									"scope": 96,
									"src": "2244:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2308:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2390:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2398:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "2424:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 92,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2424:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:7:0"
									},
									"scope": 96,
									"src": "2381:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1167,
							"src": "2014:420:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 123,
							"linearizedBaseContracts": [
								123
							],
							"name": "Context",
							"nameLocation": "2456:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2533:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2551:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2555:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2551:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 100,
												"id": 103,
												"nodeType": "Return",
												"src": "2544:17:0"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "2480:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2490:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2524:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:9:0"
									},
									"scope": 123,
									"src": "2471:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "2644:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 110,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2662:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2666:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2662:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 109,
												"id": 112,
												"nodeType": "Return",
												"src": "2655:15:0"
											}
										]
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2586:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2594:2:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "2628:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2628:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:16:0"
									},
									"scope": 123,
									"src": "2577:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2758:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2776:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 118,
												"id": 120,
												"nodeType": "Return",
												"src": "2769:8:0"
											}
										]
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "2695:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:2:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2749:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2748:9:0"
									},
									"scope": 123,
									"src": "2686:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "2438:350:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 160,
							"linearizedBaseContracts": [
								160
							],
							"name": "IERC20Errors",
							"nameLocation": "2802:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "e450d38c",
									"id": 131,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "2828:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2871:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "2922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2852:83:0"
									},
									"src": "2822:114:0"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2944:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 136,
									"name": "ERC20InvalidSender",
									"nameLocation": "3111:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3138:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "3130:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:16:0"
									},
									"src": "3105:41:0"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3154:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 141,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "3328:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3357:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3349:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:18:0"
									},
									"src": "3322:45:0"
								},
								{
									"errorSelector": "fb8f41b2",
									"id": 149,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "3381:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3426:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3418:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "3452:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3444:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "3480:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3472:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3407:86:0"
									},
									"src": "3375:119:0"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3502:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 154,
									"name": "ERC20InvalidApprover",
									"nameLocation": "3691:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "3720:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3712:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3711:18:0"
									},
									"src": "3685:45:0"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "3738:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 159,
									"name": "ERC20InvalidSpender",
									"nameLocation": "3948:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3976:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3968:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:17:0"
									},
									"src": "3942:43:0"
								}
							],
							"scope": 1167,
							"src": "2792:1196:0",
							"usedErrors": [
								131,
								136,
								141,
								149,
								154,
								159
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 161,
								"nodeType": "StructuredDocumentation",
								"src": "3992:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IERC721Errors",
							"nameLocation": "4148:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "89c62b64",
									"id": 165,
									"name": "ERC721InvalidOwner",
									"nameLocation": "4175:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4202:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4194:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4193:15:0"
									},
									"src": "4169:40:0"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "4217:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 170,
									"name": "ERC721NonexistentToken",
									"nameLocation": "4364:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4395:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4387:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4386:17:0"
									},
									"src": "4358:46:0"
								},
								{
									"errorSelector": "64283d7b",
									"id": 178,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "4418:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4447:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "4439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4463:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "4455:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "4472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:48:0"
									},
									"src": "4412:75:0"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "4495:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 183,
									"name": "ERC721InvalidSender",
									"nameLocation": "4662:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4690:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4682:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4681:16:0"
									},
									"src": "4656:42:0"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "4706:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 188,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "4880:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4910:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "4902:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:18:0"
									},
									"src": "4874:46:0"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "4928:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 195,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "5191:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5226:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "5218:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5244:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "5236:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:35:0"
									},
									"src": "5185:68:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "5261:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 200,
									"name": "ERC721InvalidApprover",
									"nameLocation": "5450:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5480:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5472:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5471:18:0"
									},
									"src": "5444:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5498:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 205,
									"name": "ERC721InvalidOperator",
									"nameLocation": "5710:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5740:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5732:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5731:18:0"
									},
									"src": "5704:46:0"
								}
							],
							"scope": 1167,
							"src": "4138:1615:0",
							"usedErrors": [
								165,
								170,
								178,
								183,
								188,
								195,
								200,
								205
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "5757:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 251,
							"linearizedBaseContracts": [
								251
							],
							"name": "IERC1155Errors",
							"nameLocation": "5915:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "03dee4c5",
									"id": 217,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "5943:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5988:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5980:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "6013:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6005:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6039:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6064:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:109:0"
									},
									"src": "5937:142:0"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "6087:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 222,
									"name": "ERC1155InvalidSender",
									"nameLocation": "6254:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6283:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6248:43:0"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "6299:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 227,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "6473:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6504:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6496:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:18:0"
									},
									"src": "6467:47:0"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6522:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 234,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "6794:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6831:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6823:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6849:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6841:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6822:33:0"
									},
									"src": "6788:68:0"
								},
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "6864:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 239,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "7053:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "7084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7076:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7075:18:0"
									},
									"src": "7047:47:0"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "7102:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 244,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "7314:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7345:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "7337:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7336:18:0"
									},
									"src": "7308:47:0"
								},
								{
									"errorSelector": "5b059991",
									"id": 250,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "7369:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "7403:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7395:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "7422:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7414:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7394:41:0"
									},
									"src": "7363:73:0"
								}
							],
							"scope": 1167,
							"src": "5905:1534:0",
							"usedErrors": [
								217,
								222,
								227,
								234,
								239,
								244,
								250
							],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 252,
										"name": "Context",
										"nameLocations": [
											"7470:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 123,
										"src": "7470:7:0"
									},
									"id": 253,
									"nodeType": "InheritanceSpecifier",
									"src": "7470:7:0"
								},
								{
									"baseName": {
										"id": 254,
										"name": "IERC20",
										"nameLocations": [
											"7479:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 75,
										"src": "7479:6:0"
									},
									"id": 255,
									"nodeType": "InheritanceSpecifier",
									"src": "7479:6:0"
								},
								{
									"baseName": {
										"id": 256,
										"name": "IERC20Metadata",
										"nameLocations": [
											"7487:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 96,
										"src": "7487:14:0"
									},
									"id": 257,
									"nodeType": "InheritanceSpecifier",
									"src": "7487:14:0"
								},
								{
									"baseName": {
										"id": 258,
										"name": "IERC20Errors",
										"nameLocations": [
											"7503:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "7503:12:0"
									},
									"id": 259,
									"nodeType": "InheritanceSpecifier",
									"src": "7503:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 744,
							"linearizedBaseContracts": [
								744,
								160,
								96,
								75,
								123
							],
							"name": "ERC20",
							"nameLocation": "7461:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 263,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "7559:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "7523:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 262,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 260,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7531:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7523:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 261,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7542:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 269,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "7631:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "7575:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 268,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 264,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7583:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7575:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 267,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 265,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7602:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "7594:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 266,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7613:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "7667:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "7651:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7651:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 273,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "7703:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "7688:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 272,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7688:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 275,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "7730:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 744,
									"src": "7715:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 274,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7715:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7984:60:0",
										"statements": [
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 283,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "7995:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 284,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8003:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7995:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "7995:13:0"
											},
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 287,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "8019:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 288,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "8029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8019:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "8019:17:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "7746:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 292,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "7954:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7940:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7940:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "7975:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7961:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7961:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7939:44:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7984:0:0"
									},
									"scope": 744,
									"src": "7928:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										83
									],
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8174:31:0",
										"statements": [
											{
												"expression": {
													"id": 298,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "8192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 297,
												"id": 299,
												"nodeType": "Return",
												"src": "8185:12:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "8052:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8123:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8127:2:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8159:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8159:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8158:15:0"
									},
									"scope": 744,
									"src": "8114:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8386:33:0",
										"statements": [
											{
												"expression": {
													"id": 307,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "8404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 306,
												"id": 308,
												"nodeType": "Return",
												"src": "8397:14:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "8213:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8333:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8339:2:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8371:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8371:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8370:15:0"
									},
									"scope": 744,
									"src": "8324:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										95
									],
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "8483:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8501:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 314,
												"id": 316,
												"nodeType": "Return",
												"src": "8494:9:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "8436:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8444:2:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8476:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 312,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8476:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8475:7:0"
									},
									"scope": 744,
									"src": "8427:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "8637:38:0",
										"statements": [
											{
												"expression": {
													"id": 324,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 271,
													"src": "8655:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "8648:19:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "8519:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8585:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8596:2:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8628:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8627:9:0"
									},
									"scope": 744,
									"src": "8576:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "8812:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 335,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "8830:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 337,
													"indexExpression": {
														"id": 336,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "8840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8830:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 338,
												"nodeType": "Return",
												"src": "8823:25:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "8683:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8747:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8765:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "8757:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8756:17:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "8803:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8802:9:0"
									},
									"scope": 744,
									"src": "8738:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "8939:107:0",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8958:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "8950:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 349,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8950:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 351,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "8966:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8966:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8950:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "8999:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "9006:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "9010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 354,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "8989:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8989:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "8989:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 348,
												"id": 361,
												"nodeType": "Return",
												"src": "9027:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8873:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8890:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "8882:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "8894:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8881:27:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "8933:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8933:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8932:6:0"
									},
									"scope": 744,
									"src": "8864:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "9223:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 373,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "9241:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 375,
														"indexExpression": {
															"id": 374,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "9253:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9241:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 377,
													"indexExpression": {
														"id": 376,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "9260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9241:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 372,
												"id": 378,
												"nodeType": "Return",
												"src": "9234:34:0"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "9054:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9118:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9146:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9162:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9127:57:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9214:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9213:9:0"
									},
									"scope": 744,
									"src": "9109:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										63
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "9388:111:0",
										"statements": [
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9407:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "9399:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9399:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 391,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "9415:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9415:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9399:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9447:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "9454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "9463:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 394,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															637,
															696
														],
														"referencedDeclaration": 637,
														"src": "9438:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9438:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "9438:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 388,
												"id": 401,
												"nodeType": "Return",
												"src": "9480:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9293:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "9311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9345:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "9337:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9300:57:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "9382:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9381:6:0"
									},
									"scope": 744,
									"src": "9284:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										74
									],
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "9634:156:0",
										"statements": [
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9653:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "9645:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 414,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9645:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 416,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "9663:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9645:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9702:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "9708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "9686:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9686:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "9686:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9744:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9750:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9754:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "9734:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9734:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "9734:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 413,
												"id": 432,
												"nodeType": "Return",
												"src": "9771:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9516:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9547:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9539:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9570:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9562:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9591:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9528:75:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9628:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9628:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9627:6:0"
									},
									"scope": 744,
									"src": "9507:283:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "9909:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 443,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "9924:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9940:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 444,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9932:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9932:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9924:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "9920:88:0",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "9944:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9993:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 450,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9985:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9985:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 449,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "9966:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9966:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 455,
															"nodeType": "RevertStatement",
															"src": "9959:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 458,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "10022:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 459,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "10018:88:0",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "10040:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 465,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 464,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "10062:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10062:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 470,
															"nodeType": "RevertStatement",
															"src": "10055:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "10124:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "10130:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "10134:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "10116:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10116:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "10116:24:0"
											}
										]
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "9807:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "9827:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9858:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "9850:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "9871:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9816:75:0"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9909:0:0"
									},
									"scope": 744,
									"src": "9798:350:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "10231:1060:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "10246:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10262:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10254:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 490,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10254:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10254:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10246:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "10423:371:0",
													"statements": [
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "10446:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 526,
																	"src": "10438:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 505,
															"initialValue": {
																"baseExpression": {
																	"id": 502,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "10460:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 504,
																"indexExpression": {
																	"id": 503,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "10470:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10460:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10438:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 506,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "10494:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 507,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "10508:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10494:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 516,
															"nodeType": "IfStatement",
															"src": "10490:117:0",
															"trueBody": {
																"id": 515,
																"nodeType": "Block",
																"src": "10515:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 510,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 482,
																					"src": "10566:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 511,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 501,
																					"src": "10572:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 512,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 486,
																					"src": "10585:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 509,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 131,
																				"src": "10541:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10541:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 514,
																		"nodeType": "RevertStatement",
																		"src": "10534:57:0"
																	}
																]
															}
														},
														{
															"id": 525,
															"nodeType": "UncheckedBlock",
															"src": "10621:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 517,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "10730:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "10740:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "10730:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 520,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "10748:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 521,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 486,
																				"src": "10762:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10748:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10730:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 524,
																	"nodeType": "ExpressionStatement",
																	"src": "10730:37:0"
																}
															]
														}
													]
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "10242:552:0",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "10266:151:0",
													"statements": [
														{
															"expression": {
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 495,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "10384:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 496,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "10400:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10384:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 498,
															"nodeType": "ExpressionStatement",
															"src": "10384:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 528,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "10810:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10824:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10816:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 529,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10816:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10816:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10810:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 547,
													"nodeType": "Block",
													"src": "11030:211:0",
													"statements": [
														{
															"id": 546,
															"nodeType": "UncheckedBlock",
															"src": "11045:185:0",
															"statements": [
																{
																	"expression": {
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 540,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "11192:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 542,
																			"indexExpression": {
																				"id": 541,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 484,
																				"src": "11202:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11192:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "11209:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11192:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 545,
																	"nodeType": "ExpressionStatement",
																	"src": "11192:22:0"
																}
															]
														}
													]
												},
												"id": 548,
												"nodeType": "IfStatement",
												"src": "10806:435:0",
												"trueBody": {
													"id": 539,
													"nodeType": "Block",
													"src": "10828:196:0",
													"statements": [
														{
															"id": 538,
															"nodeType": "UncheckedBlock",
															"src": "10843:170:0",
															"statements": [
																{
																	"expression": {
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 534,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "10976:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10992:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10976:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 537,
																	"nodeType": "ExpressionStatement",
																	"src": "10976:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 550,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "11267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "11273:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "11277:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "11258:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11258:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "11253:30:0"
											}
										]
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "10165:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10181:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "10173:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10195:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "10187:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10207:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "10199:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10172:41:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10231:0:0"
									},
									"scope": 744,
									"src": "10156:1135:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "11355:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 563,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "11370:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11389:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 564,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11381:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11381:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11370:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "11366:93:0",
												"trueBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "11393:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11444:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 570,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11436:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11436:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 569,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "11415:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 575,
															"nodeType": "RevertStatement",
															"src": "11408:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11485:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11477:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11477:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11477:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "11489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "11498:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "11469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11469:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "11469:35:0"
											}
										]
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "11308:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "11314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11339:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "11331:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:32:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11355:0:0"
									},
									"scope": 744,
									"src": "11299:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "11576:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 595,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "11591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11610:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 596,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11602:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11602:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "11587:91:0",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "11614:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11663:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11655:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 602,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11655:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11655:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 601,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "11636:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11636:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 607,
															"nodeType": "RevertStatement",
															"src": "11629:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 611,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "11696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 612,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11705:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11705:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "11717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 610,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "11688:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11688:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "11688:35:0"
											}
										]
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11529:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "11535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11560:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "11552:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11534:32:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11576:0:0"
									},
									"scope": 744,
									"src": "11520:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "11813:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 630,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "11833:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "11849:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11856:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 629,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															637,
															696
														],
														"referencedDeclaration": 696,
														"src": "11824:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11824:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "11824:37:0"
											}
										]
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11748:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11765:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "11757:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "11772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11797:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "11789:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11756:47:0"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11813:0:0"
									},
									"scope": 744,
									"src": "11739:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "12018:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 648,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "12033:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12050:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 649,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12042:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12042:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12033:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 662,
												"nodeType": "IfStatement",
												"src": "12029:91:0",
												"trueBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "12054:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12105:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12097:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 655,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12097:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12097:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 654,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "12076:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12076:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 660,
															"nodeType": "RevertStatement",
															"src": "12069:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 663,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "12134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 664,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12145:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12145:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12134:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "12130:92:0",
												"trueBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "12157:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12207:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12199:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 670,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12199:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12199:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 669,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "12179:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12179:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 675,
															"nodeType": "RevertStatement",
															"src": "12172:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 678,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "12232:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 681,
															"indexExpression": {
																"id": 679,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "12244:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12232:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 682,
														"indexExpression": {
															"id": 680,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "12251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12232:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 683,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "12262:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12232:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "12232:35:0"
											},
											{
												"condition": {
													"id": 686,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 645,
													"src": "12282:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "12278:78:0",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "12293:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 688,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "12322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 689,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "12329:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 690,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "12338:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 687,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "12313:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12313:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 692,
															"nodeType": "EmitStatement",
															"src": "12308:36:0"
														}
													]
												}
											}
										]
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11886:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11913:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "11905:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "11929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "11955:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11984:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "11979:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11894:106:0"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12018:0:0"
									},
									"scope": 744,
									"src": "11877:486:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "12494:480:0",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12513:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "12505:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"arguments": [
														{
															"id": 708,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "12542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "12549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 707,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "12532:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12532:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12505:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "12572:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 714,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12597:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 713,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12592:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12592:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12606:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12592:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12572:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 741,
												"nodeType": "IfStatement",
												"src": "12568:399:0",
												"trueBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "12611:356:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 719,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "12630:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "12649:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12630:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 729,
															"nodeType": "IfStatement",
															"src": "12626:214:0",
															"trueBody": {
																"id": 728,
																"nodeType": "Block",
																"src": "12656:184:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 723,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 700,
																					"src": "12731:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 724,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 706,
																					"src": "12761:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 725,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 702,
																					"src": "12800:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 722,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "12682:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12682:142:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 727,
																		"nodeType": "RevertStatement",
																		"src": "12675:149:0"
																	}
																]
															}
														},
														{
															"id": 739,
															"nodeType": "UncheckedBlock",
															"src": "12854:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 731,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "12892:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 732,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "12899:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 733,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 706,
																					"src": "12908:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 734,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 702,
																					"src": "12927:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12908:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12934:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 730,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				637,
																				696
																			],
																			"referencedDeclaration": 696,
																			"src": "12883:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12883:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 738,
																	"nodeType": "ExpressionStatement",
																	"src": "12883:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12380:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12414:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "12406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "12430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12464:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "12456:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12395:81:0"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12494:0:0"
									},
									"scope": 744,
									"src": "12371:603:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "7443:5534:0",
							"usedErrors": [
								131,
								136,
								141,
								149,
								154,
								159
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 745,
										"name": "Context",
										"nameLocations": [
											"13010:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 123,
										"src": "13010:7:0"
									},
									"id": 746,
									"nodeType": "InheritanceSpecifier",
									"src": "13010:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 885,
							"linearizedBaseContracts": [
								885,
								123
							],
							"name": "Ownable",
							"nameLocation": "12999:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 748,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "13041:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "13025:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 747,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13025:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "13056:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 753,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "13155:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "13182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13181:17:0"
									},
									"src": "13149:50:0"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "13207:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 758,
									"name": "OwnableInvalidOwner",
									"nameLocation": "13303:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13331:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "13323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13322:15:0"
									},
									"src": "13297:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 764,
									"name": "OwnershipTransferred",
									"nameLocation": "13352:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "13399:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13383:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "13439:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13423:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13372:82:0"
									},
									"src": "13346:109:0"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "13620:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "13635:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13659:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13651:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13651:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13635:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "13631:97:0",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "13663:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13713:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13705:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 777,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13705:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13705:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 776,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "13685:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13685:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 782,
															"nodeType": "RevertStatement",
															"src": "13678:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "13757:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 785,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "13738:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13738:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "13738:32:0"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "13463:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 790,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "13606:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "13598:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13597:22:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13620:0:0"
									},
									"scope": 885,
									"src": "13586:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "13892:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 793,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "13903:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13903:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "13903:13:0"
											},
											{
												"id": 796,
												"nodeType": "PlaceholderStatement",
												"src": "13927:1:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "13786:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 798,
									"name": "onlyOwner",
									"nameLocation": "13880:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13889:2:0"
									},
									"src": "13871:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "14072:32:0",
										"statements": [
											{
												"expression": {
													"id": 804,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 748,
													"src": "14090:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 805,
												"nodeType": "Return",
												"src": "14083:13:0"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "13944:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "14026:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14031:2:0"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "14063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14062:9:0"
									},
									"scope": 885,
									"src": "14017:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "14227:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 811,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "14242:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14242:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 813,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "14253:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14253:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14242:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 822,
												"nodeType": "IfStatement",
												"src": "14238:103:0",
												"trueBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "14267:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 817,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "14316:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14316:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "14289:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14289:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 820,
															"nodeType": "RevertStatement",
															"src": "14282:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "14112:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "14191:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14202:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14227:0:0"
									},
									"scope": 885,
									"src": "14182:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "14410:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14448:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14440:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14440:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14440:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 829,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "14421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14421:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "14421:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 826,
												"name": "onlyOwner",
												"nameLocations": [
													"14400:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 798,
												"src": "14400:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14400:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "14365:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14382:2:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14410:0:0"
									},
									"scope": 885,
									"src": "14356:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "14537:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 844,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "14552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14572:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 845,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14564:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14564:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14552:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "IfStatement",
												"src": "14548:93:0",
												"trueBody": {
													"id": 857,
													"nodeType": "Block",
													"src": "14576:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14626:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14618:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 851,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14618:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14618:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 850,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "14598:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14598:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 856,
															"nodeType": "RevertStatement",
															"src": "14591:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "14670:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "14651:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14651:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "14651:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 841,
												"name": "onlyOwner",
												"nameLocations": [
													"14527:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 798,
												"src": "14527:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14527:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "14476:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "14502:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "14494:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14493:18:0"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14537:0:0"
									},
									"scope": 885,
									"src": "14467:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "14910:128:0",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "14929:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "14921:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 870,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14921:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"id": 872,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 748,
													"src": "14940:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14921:25:0"
											},
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 874,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "14957:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "14966:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14957:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "14957:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 879,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "15011:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "15021:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 878,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "14990:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14990:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "EmitStatement",
												"src": "14985:45:0"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "14695:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "14856:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "14883:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14875:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14874:18:0"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14910:0:0"
									},
									"scope": 885,
									"src": "14847:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "12981:2060:0",
							"usedErrors": [
								753,
								758
							],
							"usedEvents": [
								764
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 886,
										"name": "ERC20",
										"nameLocations": [
											"15067:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 744,
										"src": "15067:5:0"
									},
									"id": 887,
									"nodeType": "InheritanceSpecifier",
									"src": "15067:5:0"
								},
								{
									"baseName": {
										"id": 888,
										"name": "Ownable",
										"nameLocations": [
											"15074:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "15074:7:0"
									},
									"id": 889,
									"nodeType": "InheritanceSpecifier",
									"src": "15074:7:0"
								}
							],
							"canonicalName": "GEPSToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1166,
							"linearizedBaseContracts": [
								1166,
								885,
								744,
								160,
								96,
								75,
								123
							],
							"name": "GEPSToken",
							"nameLocation": "15054:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 896,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "15114:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15089:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15089:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000000000"
										},
										"id": 895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530303030303030",
											"id": 891,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "15131:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50000000_by_1",
												"typeString": "int_const 50000000"
											},
											"value": "50000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 894,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 892,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "15142:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 893,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "15148:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "15142:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "15131:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 899,
									"mutability": "constant",
									"name": "TAX_PERCENT",
									"nameLocation": "15218:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15193:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 897,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "15193:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 898,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15232:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "122fe685",
									"id": 901,
									"mutability": "mutable",
									"name": "presaleAddress",
									"nameLocation": "15257:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15242:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 900,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15242:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bc71788b",
									"id": 903,
									"mutability": "mutable",
									"name": "rndAddress",
									"nameLocation": "15293:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15278:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 902,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15278:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5ece941",
									"id": 905,
									"mutability": "mutable",
									"name": "marketingAddress",
									"nameLocation": "15325:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15310:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 904,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15310:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c5f956af",
									"id": 907,
									"mutability": "mutable",
									"name": "treasuryAddress",
									"nameLocation": "15363:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15348:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 906,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15348:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1c75f085",
									"id": 909,
									"mutability": "mutable",
									"name": "teamAddress",
									"nameLocation": "15400:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15385:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15385:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3e1fe14",
									"id": 911,
									"mutability": "mutable",
									"name": "partnershipAddress",
									"nameLocation": "15433:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15418:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 910,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15418:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3221c93f",
									"id": 913,
									"mutability": "mutable",
									"name": "liquidityAddress",
									"nameLocation": "15473:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15458:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 912,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15458:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "afcf2fc4",
									"id": 915,
									"mutability": "mutable",
									"name": "charityAddress",
									"nameLocation": "15511:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15496:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 914,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15496:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f79ed94b",
									"id": 917,
									"mutability": "mutable",
									"name": "reserveAddress",
									"nameLocation": "15547:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15532:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 916,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "15532:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f02c420",
									"id": 920,
									"mutability": "mutable",
									"name": "minted",
									"nameLocation": "15580:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "15568:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 918,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "15568:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 919,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "15589:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "15972:399:0",
										"statements": [
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 949,
														"name": "presaleAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "15983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 950,
														"name": "_presaleAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "16000:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15983:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "15983:32:0"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "rndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "16026:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "_rndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "16039:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16026:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "16026:24:0"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "16061:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 958,
														"name": "_marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "16080:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16061:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "16061:36:0"
											},
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 961,
														"name": "treasuryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "16108:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 962,
														"name": "_treasuryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "16126:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16108:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "16108:34:0"
											},
											{
												"expression": {
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 965,
														"name": "teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "16153:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 966,
														"name": "_teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "16167:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16153:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "16153:26:0"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 969,
														"name": "partnershipAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "16190:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 970,
														"name": "_partnershipAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "16211:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16190:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "16190:40:0"
											},
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "liquidityAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "16241:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 974,
														"name": "_liquidityAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "16260:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16241:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "16241:36:0"
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "charityAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "16288:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 978,
														"name": "_charityAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "16305:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16288:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "16288:32:0"
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 981,
														"name": "reserveAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "16331:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "_reserveAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "16348:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16331:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "16331:32:0"
											}
										]
									},
									"id": 986,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "47455053",
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_26f62e0d82d76779297bd8bfb2df31225fb4456caf53440d980b04180a595c30",
														"typeString": "literal_string \"GEPS\""
													},
													"value": "GEPS"
												},
												{
													"hexValue": "47455053",
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15944:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_26f62e0d82d76779297bd8bfb2df31225fb4456caf53440d980b04180a595c30",
														"typeString": "literal_string \"GEPS\""
													},
													"value": "GEPS"
												}
											],
											"id": 943,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 940,
												"name": "ERC20",
												"nameLocations": [
													"15930:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 744,
												"src": "15930:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15930:21:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 945,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "15960:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15964:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "15960:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 947,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 944,
												"name": "Ownable",
												"nameLocations": [
													"15952:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 885,
												"src": "15952:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15952:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "_presaleAddress",
												"nameLocation": "15633:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15625:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "_rndAddress",
												"nameLocation": "15667:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15659:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_marketingAddress",
												"nameLocation": "15697:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15689:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_treasuryAddress",
												"nameLocation": "15733:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15725:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "_teamAddress",
												"nameLocation": "15768:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15760:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "_partnershipAddress",
												"nameLocation": "15799:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15791:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_liquidityAddress",
												"nameLocation": "15837:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15829:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_charityAddress",
												"nameLocation": "15873:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15865:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_reserveAddress",
												"nameLocation": "15907:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "15899:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15614:315:0"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15972:0:0"
									},
									"scope": 1166,
									"src": "15603:768:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "16414:624:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16433:7:0",
															"subExpression": {
																"id": 992,
																"name": "minted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "16434:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206861766520616c7265616479206265656e206d696e746564",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16442:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ceecdea78d8277dc86c0051f97cf02df0d80dcdd29c80f23c038ae03af32a32",
																"typeString": "literal_string \"Tokens have already been minted\""
															},
															"value": "Tokens have already been minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ceecdea78d8277dc86c0051f97cf02df0d80dcdd29c80f23c038ae03af32a32",
																"typeString": "literal_string \"Tokens have already been minted\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16425:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "16425:51:0"
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 997,
														"name": "minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "16487:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16496:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16487:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "16487:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"name": "presaleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "16517:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_20000000000000000000000000_by_1",
																"typeString": "int_const 20000000000000000000000000"
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3230303030303030",
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16533:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20000000_by_1",
																	"typeString": "int_const 20000000"
																},
																"value": "20000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16544:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16550:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16544:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16533:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20000000000000000000000000_by_1",
																"typeString": "int_const 20000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_20000000000000000000000000_by_1",
																"typeString": "int_const 20000000000000000000000000"
															}
														],
														"id": 1001,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16511:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16511:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "16511:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "rndAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "16577:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32353030303030",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16589:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000_by_1",
																	"typeString": "int_const 2500000"
																},
																"value": "2500000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16599:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16605:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16599:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16589:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														],
														"id": 1010,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16571:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16571:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "16571:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1020,
															"name": "marketingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "16631:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32353030303030",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16649:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000_by_1",
																	"typeString": "int_const 2500000"
																},
																"value": "2500000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16659:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16665:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16659:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16649:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														],
														"id": 1019,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16625:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16625:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "16625:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "treasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "16691:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "35303030303030",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16708:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000000_by_1",
																	"typeString": "int_const 5000000"
																},
																"value": "5000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16718:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16724:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16718:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16708:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														],
														"id": 1028,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16685:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16685:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "16685:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "teamAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "16751:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "35303030303030",
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16764:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000000_by_1",
																	"typeString": "int_const 5000000"
																},
																"value": "5000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16774:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16780:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16774:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16764:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														],
														"id": 1037,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16745:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16745:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "16745:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "partnershipAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "16807:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32353030303030",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16827:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000_by_1",
																	"typeString": "int_const 2500000"
																},
																"value": "2500000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16837:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16843:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16837:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16827:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														],
														"id": 1046,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16801:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16801:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "16801:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "liquidityAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "16869:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "35303030303030",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16887:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000000_by_1",
																	"typeString": "int_const 5000000"
																},
																"value": "5000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16897:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16903:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16897:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16887:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														],
														"id": 1055,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16863:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16863:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "16863:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "charityAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "16930:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32353030303030",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000_by_1",
																	"typeString": "int_const 2500000"
																},
																"value": "2500000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16956:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16962:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "16956:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "16946:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2500000000000000000000000_by_1",
																"typeString": "int_const 2500000000000000000000000"
															}
														],
														"id": 1064,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16924:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16924:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "16924:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1074,
															"name": "reserveAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "16988:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "35303030303030",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17004:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000000_by_1",
																	"typeString": "int_const 5000000"
																},
																"value": "5000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17014:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17020:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "17014:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "17004:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_5000000000000000000000000_by_1",
																"typeString": "int_const 5000000000000000000000000"
															}
														],
														"id": 1073,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "16982:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16982:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "16982:41:0"
											}
										]
									},
									"functionSelector": "1249c58b",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 989,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 988,
												"name": "onlyOwner",
												"nameLocations": [
													"16404:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 798,
												"src": "16404:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16404:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "16388:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16392:2:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16414:0:0"
									},
									"scope": 1166,
									"src": "16379:659:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										480
									],
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "17176:826:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1093,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "17191:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1094,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17201:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17201:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17191:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1097,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "17212:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1098,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17225:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17225:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17212:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17191:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "17387:608:0",
													"statements": [
														{
															"assignments": [
																1112
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1112,
																	"mutability": "mutable",
																	"name": "taxAmount",
																	"nameLocation": "17451:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1162,
																	"src": "17443:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1111,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17443:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1119,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1113,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "17464:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1114,
																				"name": "TAX_PERCENT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 899,
																				"src": "17473:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17464:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1116,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17463:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17488:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "17463:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17443:48:0"
														},
														{
															"assignments": [
																1121
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1121,
																	"mutability": "mutable",
																	"name": "transferAmount",
																	"nameLocation": "17514:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1162,
																	"src": "17506:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1120,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17506:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1125,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1122,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "17531:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1123,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "17540:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17531:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17506:43:0"
														},
														{
															"assignments": [
																1127
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1127,
																	"mutability": "mutable",
																	"name": "halfTax",
																	"nameLocation": "17630:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1162,
																	"src": "17622:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1126,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17622:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1131,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1128,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "17640:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17652:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "17640:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17622:31:0"
														},
														{
															"assignments": [
																1133
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1133,
																	"mutability": "mutable",
																	"name": "remainingTax",
																	"nameLocation": "17676:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1162,
																	"src": "17668:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1132,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17668:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1137,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1134,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "17691:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1135,
																	"name": "halfTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "17703:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17691:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17668:42:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1141,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "17817:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1142,
																		"name": "treasuryAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "17825:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1143,
																		"name": "halfTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "17842:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1138,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "17801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_GEPSToken_$1166_$",
																			"typeString": "type(contract super GEPSToken)"
																		}
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17807:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 480,
																	"src": "17801:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17801:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1145,
															"nodeType": "ExpressionStatement",
															"src": "17801:49:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1149,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "17881:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1150,
																		"name": "charityAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "17889:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1151,
																		"name": "remainingTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "17905:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1146,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "17865:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_GEPSToken_$1166_$",
																			"typeString": "type(contract super GEPSToken)"
																		}
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17871:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 480,
																	"src": "17865:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17865:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "17865:53:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1157,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "17949:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1158,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17957:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1159,
																		"name": "transferAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "17968:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1154,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "17933:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_GEPSToken_$1166_$",
																			"typeString": "type(contract super GEPSToken)"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17939:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 480,
																	"src": "17933:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17933:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1161,
															"nodeType": "ExpressionStatement",
															"src": "17933:50:0"
														}
													]
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "17187:808:0",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "17234:147:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1105,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "17343:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1106,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17351:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1107,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17362:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1102,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "17327:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_GEPSToken_$1166_$",
																			"typeString": "type(contract super GEPSToken)"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17333:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 480,
																	"src": "17327:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17327:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "17327:42:0"
														}
													]
												}
											}
										]
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "17055:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1091,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17167:8:0"
									},
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "17083:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "17075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17108:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "17100:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "17128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17064:85:0"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17176:0:0"
									},
									"scope": 1166,
									"src": "17046:956:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1167,
							"src": "15045:2962:0",
							"usedErrors": [
								131,
								136,
								141,
								149,
								154,
								159,
								753,
								758
							],
							"usedEvents": [
								11,
								20,
								764
							]
						}
					],
					"src": "168:17841:0"
				},
				"id": 0
			}
		}
	}
}